{"mappings":"A,IEAyD,E,E,C,EEErD,EAAiB,SAAU,CAAQ,CAAE,CAAW,EAClD,GAAI,CAAE,CAAA,aAAoB,CAAA,EACxB,MAAM,AAAI,UAAU,oCAExB,EASI,EAAc,WAChB,SAAS,EAAY,CAAO,EAC1B,IAAI,EAAW,UAAU,MAAM,CAAG,GAAK,AAAiB,KAAA,IAAjB,SAAS,CAAC,EAAE,CAAiB,SAAS,CAAC,EAAE,CAAG,CAAC,EAGpF,GAFA,EAAe,IAAI,CAAE,GAEjB,CAAE,CAAA,aAAmB,IAAA,EACvB,KAAM,wCAA0C,EAAU,iBAG5D,CAAA,IAAI,CAAC,KAAK,CAAG,KACb,IAAI,CAAC,MAAM,CAAG,KACd,IAAI,CAAC,WAAW,CAAG,KACnB,IAAI,CAAC,YAAY,CAAG,KACpB,IAAI,CAAC,IAAI,CAAG,KACZ,IAAI,CAAC,GAAG,CAAG,KAGX,IAAI,CAAC,SAAS,CAAG,KACjB,IAAI,CAAC,QAAQ,CAAG,KAChB,IAAI,CAAC,aAAa,CAAG,KACrB,IAAI,CAAC,YAAY,CAAG,KAEpB,IAAI,CAAC,iBAAiB,CAAG,KACzB,IAAI,CAAC,UAAU,CAAG,KAClB,IAAI,CAAC,KAAK,CAAG,KAEb,IAAI,CAAC,UAAU,CAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EACvC,IAAI,CAAC,SAAS,CAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAErC,IAAI,CAAC,OAAO,CAAG,EACf,IAAI,CAAC,QAAQ,CAAG,IAAI,CAAC,cAAc,CAAC,GAEpC,IAAI,CAAC,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAG,GAAK,EAC5C,IAAI,CAAC,YAAY,CAAG,EAAY,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAC7E,IAAI,CAAC,KAAK,CAAG,EAAY,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAC1D,IAAI,CAAC,cAAc,CAAG,EAAY,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAChF,IAAI,CAAC,iBAAiB,CAAG,EAAY,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,sBAAsB,EACvF,IAAI,CAAC,SAAS,CAAG,EAAY,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAClE,IAAI,CAAC,gBAAgB,CAAG,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAEtD,IAAI,CAAC,eAAe,CAAG,IAAI,CAAC,kBAAkB,GAE1C,IAAI,CAAC,KAAK,EACZ,IAAI,CAAC,YAAY,GAGf,IAAI,CAAC,iBAAiB,EACxB,IAAI,CAAC,gBAAgB,GAGvB,IAAI,CAAC,iBAAiB,GACtB,IAAI,CAAC,KAAK,GAEgB,CAAA,IAAtB,IAAI,CAAC,YAAY,GACnB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAG,EACvB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAG,EAE3B,CAwaA,OAtaA,EAAY,aAAa,CAAG,SAAuB,CAAO,EACxD,MAAO,AAAY,KAAZ,GAAkB,AAAY,CAAA,IAAZ,GAAoB,AAAY,IAAZ,CAC/C,EAQA,EAAY,SAAS,CAAC,kBAAkB,CAAG,WACzC,GAAI,IAAI,CAAC,iBAAiB,CACxB,OAAO,OAAO,QAAQ,CAGxB,GAAI,AAAgD,UAAhD,OAAO,IAAI,CAAC,QAAQ,CAAC,sBAAsB,CAAe,CAC5D,IAAI,EAAoB,SAAS,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,sBAAsB,EAEnF,GAAI,EACF,OAAO,CAEX,QAEA,AAAI,IAAI,CAAC,QAAQ,CAAC,sBAAsB,WAAY,KAC3C,IAAI,CAAC,QAAQ,CAAC,sBAAsB,CAGtC,IAAI,CAAC,OAAO,AACrB,EAQA,EAAY,SAAS,CAAC,iBAAiB,CAAG,WACxC,IAAI,CAAC,gBAAgB,CAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EACnD,IAAI,CAAC,eAAe,CAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EACjD,IAAI,CAAC,gBAAgB,CAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EACnD,IAAI,CAAC,kBAAkB,CAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EACvD,IAAI,CAAC,uBAAuB,CAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAEjE,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,aAAc,IAAI,CAAC,gBAAgB,EACzE,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,aAAc,IAAI,CAAC,gBAAgB,EACzE,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,YAAa,IAAI,CAAC,eAAe,EAEnE,CAAA,IAAI,CAAC,KAAK,EAAI,IAAI,CAAC,iBAAiB,AAAjB,GACrB,OAAO,gBAAgB,CAAC,SAAU,IAAI,CAAC,kBAAkB,EAGvD,IAAI,CAAC,SAAS,EAChB,OAAO,gBAAgB,CAAC,oBAAqB,IAAI,CAAC,uBAAuB,CAE7E,EAOA,EAAY,SAAS,CAAC,oBAAoB,CAAG,WAC3C,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,aAAc,IAAI,CAAC,gBAAgB,EAC5E,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,aAAc,IAAI,CAAC,gBAAgB,EAC5E,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,YAAa,IAAI,CAAC,eAAe,EAEtE,IAAI,CAAC,SAAS,EAChB,OAAO,mBAAmB,CAAC,oBAAqB,IAAI,CAAC,uBAAuB,EAG1E,CAAA,IAAI,CAAC,KAAK,EAAI,IAAI,CAAC,iBAAiB,AAAjB,GACrB,OAAO,mBAAmB,CAAC,SAAU,IAAI,CAAC,kBAAkB,CAEhE,EAEA,EAAY,SAAS,CAAC,OAAO,CAAG,WAC9B,aAAa,IAAI,CAAC,iBAAiB,EACX,OAApB,IAAI,CAAC,UAAU,EACjB,qBAAqB,IAAI,CAAC,UAAU,EAGtC,IAAI,CAAC,KAAK,GAEV,IAAI,CAAC,oBAAoB,GACzB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAG,KAC3B,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAE/B,IAAI,CAAC,OAAO,CAAG,IACjB,EAEA,EAAY,SAAS,CAAC,mBAAmB,CAAG,SAA6B,CAAK,EAC5E,GAAI,AAAgB,OAAhB,EAAM,KAAK,EAAa,AAAe,OAAf,EAAM,IAAI,EAItC,IAAI,CAAC,qBAAqB,GAEtB,IAAI,CAAC,gBAAgB,CAAG,IAC1B,IAAI,CAAC,aAAa,CAAG,IAAI,CAAC,SAAS,CACnC,IAAI,CAAC,YAAY,CAAG,IAAI,CAAC,QAAQ,CAE7B,AAAmB,OAAnB,IAAI,CAAC,SAAS,EAChB,IAAI,CAAC,SAAS,CAAG,EAAM,KAAK,CAC5B,IAAI,CAAC,QAAQ,CAAG,EAAM,IAAI,GAE1B,IAAI,CAAC,SAAS,CAAI,AAAA,CAAA,EAAM,KAAK,CAAG,IAAI,CAAC,aAAY,AAAZ,EAAiB,EACtD,IAAI,CAAC,QAAQ,CAAI,AAAA,CAAA,EAAM,IAAI,CAAG,IAAI,CAAC,YAAW,AAAX,EAAgB,GAGrD,IAAI,CAAC,gBAAgB,EAAI,GAG3B,IAAI,EAAc,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CACjF,EAAc,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAEjF,EAAmB,EAAc,IAAI,CAAC,KAAK,CAC3C,EAAmB,EAAc,IAAI,CAAC,MAAM,CAE5C,EAAS,EAAM,KAAK,CAAI,CAAA,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAG,IAAI,CAAC,SAAS,AAAT,EAChE,EAAS,EAAM,IAAI,CAAI,CAAA,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAG,IAAI,CAAC,QAAQ,AAAR,CAK3C,QAApB,IAAI,CAAC,UAAU,EACjB,qBAAqB,IAAI,CAAC,UAAU,EAGtC,IAAI,CAAC,KAAK,CAAG,CACX,QAAS,AARA,EAAS,EAQF,IAAI,CAAC,IAAI,CACzB,QAAS,AARA,EAAS,EAQF,IAAI,CAAC,GAAG,AAC1B,EAEA,IAAI,CAAC,UAAU,CAAG,sBAAsB,IAAI,CAAC,UAAU,EACzD,EAEA,EAAY,SAAS,CAAC,YAAY,CAAG,WACnC,IAAI,CAAC,qBAAqB,GAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAG,YAChC,IAAI,CAAC,aAAa,EACpB,EAEA,EAAY,SAAS,CAAC,WAAW,CAAG,SAAqB,CAAK,EACpC,OAApB,IAAI,CAAC,UAAU,EACjB,qBAAqB,IAAI,CAAC,UAAU,EAGtC,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,UAAU,CAAG,sBAAsB,IAAI,CAAC,UAAU,CACzD,EAEA,EAAY,SAAS,CAAC,YAAY,CAAG,WACnC,IAAI,CAAC,aAAa,GAEd,IAAI,CAAC,QAAQ,CAAC,KAAK,EACrB,sBAAsB,IAAI,CAAC,SAAS,CAExC,EAEA,EAAY,SAAS,CAAC,KAAK,CAAG,WAC5B,IAAI,CAAC,YAAY,GAEb,IAAI,CAAC,iBAAiB,CACxB,IAAI,CAAC,KAAK,CAAG,CACX,QAAS,AAAC,CAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,AAAH,EAAQ,CAAA,EAAI,IAAI,CAAC,QAAQ,CAAC,GAAE,AAAF,EAAO,IAAI,CAAC,WAAW,CAChG,QAAS,AAAC,CAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,AAAH,EAAQ,CAAA,EAAI,IAAI,CAAC,QAAQ,CAAC,GAAE,AAAF,EAAO,IAAI,CAAC,YAAY,AACnG,EAEA,IAAI,CAAC,KAAK,CAAG,CACX,QAAS,IAAI,CAAC,IAAI,CAAI,AAAA,CAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAG,IAAI,CAAC,QAAQ,CAAC,GAAE,AAAF,EAAQ,CAAA,EAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,AAAH,EAAO,IAAI,CAAC,KAAK,CACtG,QAAS,IAAI,CAAC,GAAG,CAAI,AAAA,CAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAG,IAAI,CAAC,QAAQ,CAAC,GAAE,AAAF,EAAQ,CAAA,EAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,AAAH,EAAO,IAAI,CAAC,MAAM,AACxG,EAGF,IAAI,EAAc,IAAI,CAAC,QAAQ,CAAC,KAAK,AACrC,CAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAG,EACtB,IAAI,CAAC,MAAM,GACX,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAG,EACtB,IAAI,CAAC,UAAU,EACjB,EAEA,EAAY,SAAS,CAAC,UAAU,CAAG,WAC7B,IAAI,CAAC,KAAK,GACZ,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAG,uCACpC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAG,IAEtC,EAEA,EAAY,SAAS,CAAC,SAAS,CAAG,WAChC,IAAI,EAAI,KAAK,EACT,EAAI,KAAK,EAiBb,OAfI,IAAI,CAAC,iBAAiB,EACxB,EAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAG,IAAI,CAAC,WAAW,CACzC,EAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAG,IAAI,CAAC,YAAY,GAE1C,EAAK,AAAA,CAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAG,IAAI,CAAC,IAAI,AAAJ,EAAQ,IAAI,CAAC,KAAK,CACjD,EAAK,AAAA,CAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAG,IAAI,CAAC,GAAG,AAAH,EAAO,IAAI,CAAC,MAAM,EAGnD,EAAI,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,EAAG,GAAI,GAC7B,EAAI,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,EAAG,GAAI,GAMtB,CACL,MALW,AAAA,CAAA,IAAI,CAAC,OAAO,CAAI,CAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAG,EAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAG,CAAA,CAAA,EAAI,OAAO,CAAC,GAMnF,MALW,AAAA,CAAA,IAAI,CAAC,OAAO,CAAI,CAAA,EAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAG,EAAI,IAAI,CAAC,QAAQ,CAAC,GAAE,AAAF,CAAE,EAAI,OAAO,CAAC,GAMnF,YAAa,AAAI,IAAJ,EACb,YAAa,AAAI,IAAJ,EACb,MAPU,KAAK,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAI,CAAA,IAAI,CAAC,IAAI,CAAG,IAAI,CAAC,KAAK,CAAG,CAAA,EAAI,CAAE,CAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAI,CAAA,IAAI,CAAC,GAAG,CAAG,IAAI,CAAC,MAAM,CAAG,CAAA,CAAA,GAAQ,CAAA,IAAM,KAAK,EAAC,AAAD,CAQ9I,CACF,EAEA,EAAY,SAAS,CAAC,qBAAqB,CAAG,WAC5C,IAAI,EAAO,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAE7C,CAAA,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CACrC,IAAI,CAAC,MAAM,CAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CACvC,IAAI,CAAC,IAAI,CAAG,EAAK,IAAI,CACrB,IAAI,CAAC,GAAG,CAAG,EAAK,GAAG,AACrB,EAEA,EAAY,SAAS,CAAC,MAAM,CAAG,WAC7B,IAAI,EAAS,IAAI,CAAC,SAAS,EAE3B,CAAA,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAG,eAAiB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAA1C,eAAoE,CAAA,AAAuB,MAAvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAW,EAAI,EAAO,KAAK,AAAL,EAA5G,gBAA6I,CAAA,AAAuB,MAAvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAW,EAAI,EAAO,KAAK,AAAL,EAArL,gBAAqN,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAG,KAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAG,KAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAG,IAEhU,IAAI,CAAC,KAAK,GACZ,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAG,UAAY,EAAO,KAAK,CAAG,6BAC/D,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAG,GAAK,EAAO,WAAW,CAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAG,KAG3F,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,YAAY,aAAc,CACvD,OAAU,CACZ,IAEA,IAAI,CAAC,UAAU,CAAG,IACpB,EAQA,EAAY,SAAS,CAAC,YAAY,CAAG,WAEnC,GAAI,CAAC,IAAI,CAAC,cAAc,CAAE,CAExB,IAAI,EAAc,SAAS,aAAa,CAAC,OACzC,EAAY,SAAS,CAAC,GAAG,CAAC,iBAE1B,IAAI,EAAmB,SAAS,aAAa,CAAC,OAC9C,EAAiB,SAAS,CAAC,GAAG,CAAC,uBAE/B,EAAY,WAAW,CAAC,GACxB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAC3B,CAEA,IAAI,CAAC,mBAAmB,CAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,kBACtD,IAAI,CAAC,YAAY,CAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,wBAE3C,IAAI,CAAC,cAAc,GAIvB,OAAO,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAE,CAC5C,SAAY,WACZ,IAAO,IACP,KAAQ,IACR,MAAS,OACT,OAAU,OACV,SAAY,SACZ,iBAAkB,OAClB,gBAAiB,SACnB,GAEA,OAAO,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAE,CACrC,SAAY,WACZ,IAAO,MACP,KAAQ,MACR,iBAAkB,OAClB,mBAAoB,0EACpB,UAAa,uCACb,mBAAoB,QACpB,QAAW,GACb,GAEA,IAAI,CAAC,eAAe,GACtB,EAEA,EAAY,SAAS,CAAC,eAAe,CAAG,WACtC,GAAI,IAAI,CAAC,KAAK,CAAE,CACd,IAAI,EAAa,AAAA,CAAA,IAAI,CAAC,OAAO,CAAC,WAAW,CAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAG,IAAI,CAAC,OAAO,CAAC,YAAY,AAAZ,EAAgB,EAEhI,OAAO,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAE,CACrC,MAAS,EAAY,KACrB,OAAU,EAAY,IACxB,EACF,CACF,EAEA,EAAY,SAAS,CAAC,gBAAgB,CAAG,WACvC,IAAI,CAAC,WAAW,CAAG,OAAO,UAAU,EAAI,SAAS,eAAe,CAAC,WAAW,EAAI,SAAS,IAAI,CAAC,WAAW,CAEzG,IAAI,CAAC,YAAY,CAAG,OAAO,WAAW,EAAI,SAAS,eAAe,CAAC,YAAY,EAAI,SAAS,IAAI,CAAC,YAAY,AAC/G,EAEA,EAAY,SAAS,CAAC,cAAc,CAAG,WACrC,IAAI,CAAC,eAAe,GACpB,IAAI,CAAC,gBAAgB,EACvB,EAEA,EAAY,SAAS,CAAC,aAAa,CAAG,WACpC,IAAI,EAAQ,IAAI,CAEhB,aAAa,IAAI,CAAC,iBAAiB,EACnC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAG,MAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,CAC9E,IAAI,CAAC,KAAK,EAAE,CAAA,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,CAAG,WAAa,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAG,MAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,AAAN,EAE9G,IAAI,CAAC,iBAAiB,CAAG,WAAW,WAClC,EAAM,OAAO,CAAC,KAAK,CAAC,UAAU,CAAG,GAC7B,EAAM,KAAK,EACb,CAAA,EAAM,YAAY,CAAC,KAAK,CAAC,UAAU,CAAG,EADxC,CAGF,EAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CACxB,EA2BA,EAAY,SAAS,CAAC,cAAc,CAAG,SAAwB,CAAQ,EACrE,IAAI,EAAkB,CACpB,QAAS,CAAA,EACT,IAAK,GACL,OAAQ,EACR,OAAQ,EACR,YAAa,IACb,OAAQ,gCACR,MAAO,EACP,MAAO,IACP,WAAY,CAAA,EACZ,KAAM,KACN,MAAO,CAAA,EACP,YAAa,EACb,kBAAmB,CAAA,EACnB,sBAAuB,CAAA,EACvB,sBAAuB,KACvB,MAAO,CAAA,EACP,iBAAkB,CAAA,EAClB,UAAW,CAAA,EACX,mBAAoB,IACpB,mBAAoB,GACpB,mBAAoB,IACpB,mBAAoB,GACpB,iBAAkB,EACpB,EAEI,EAAc,CAAC,EACnB,IAAK,IAAI,KAAY,EACnB,GAAI,KAAY,EACd,CAAW,CAAC,EAAS,CAAG,CAAQ,CAAC,EAAS,MACrC,GAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,aAAe,GAAW,CAC7D,IAAI,EAAY,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,aAAe,GACzD,GAAI,CACF,CAAW,CAAC,EAAS,CAAG,KAAK,KAAK,CAAC,EACrC,CAAE,MAAO,EAAG,CACV,CAAW,CAAC,EAAS,CAAG,CAC1B,CACF,MACE,CAAW,CAAC,EAAS,CAAG,CAAe,CAAC,EAAS,CAIrD,OAAO,CACT,EAEA,EAAY,IAAI,CAAG,SAAc,CAAQ,CAAE,CAAQ,EAC7C,aAAoB,MACtB,CAAA,EAAW,CAAC,EAAS,AAAA,EAGnB,aAAoB,UACtB,CAAA,EAAW,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAD3B,EAIM,aAAoB,OAI1B,EAAS,OAAO,CAAC,SAAU,CAAO,EAC1B,gBAAiB,GACrB,CAAA,EAAQ,WAAW,CAAG,IAAI,EAAY,EAAS,EADjD,CAGF,EACF,EAEO,CACT,GAEwB,CAAA,aAApB,OAAO,WAET,OAAO,WAAW,CAAG,EAKrB,EAAY,IAAI,CAAC,SAAS,gBAAgB,CAAC,iBAG7C,EAAiB,ECrfV,MAAM,EAAiB,CAC5B,CACE,QAAS,iBACT,UAAW,CACT,MAAO,IACP,SAAU,MACV,OAAQ,QACV,CACF,EACA,CACE,QAAS,cACT,UAAW,CACT,MAAO,IACP,OAAQ,OAAO,UAAU,CAAG,IAAM,OAAS,QAC7C,CACF,EACA,CACE,QAAS,YACT,UAAW,CACT,MAAO,IACP,OAAQ,OAAO,UAAU,CAAG,IAAM,OAAS,QAC7C,CACF,EACA,CACE,QAAS,wBACT,UAAW,CACT,MAAO,IACP,OAAQ,QACV,CACF,EACA,CACE,QAAS,uBACT,UAAW,CACT,MAAO,IACP,OAAQ,OAAO,UAAU,CAAG,IAAM,OAAS,QAC7C,CACF,EACA,CACE,QAAS,yBACT,UAAW,CACT,MAAO,IACP,OAAQ,OAAO,UAAU,CAAG,IAAM,OAAS,QAC7C,CACF,EACA,CACE,QAAS,0BACT,UAAW,CACT,MAAO,IACP,OAAQ,OAAO,UAAU,CAAG,IAAM,QAAU,QAC9C,CACF,EACA,CACE,QAAS,mBACT,UAAW,CACT,MAAO,IACP,OAAQ,QACV,CACF,EACD,CE/DK,EAAgB,CAAE,EAAG,EAAG,EAAG,CAAE,EAenC,SAAS,EAAiB,CAAE,EAC1B,IAAI,EAAQ,EAAG,OAAO,CAAC,IAAI,CACrB,EAAe,EAAG,OAAO,CAAC,YAAY,CACtC,EAAa,EAAG,OAAO,CAAC,UAAU,CAClC,EAAS,SAAS,EAAG,OAAO,CAAC,MAAM,CAAE,IAGrC,EAAa,EAAE,CAGf,EAAiB,gBACjB,EAAQ,EAAM,KAAK,CAAC,GACtB,EAAsB,GACtB,EAAoB,GAExB,GAAI,EAAO,CACT,IAAM,EAAmB,CAAK,CAAC,EAAE,CACjC,EAAsB,EAAM,OAAO,CAAC,CAAK,CAAC,EAAE,EAE5C,EAAQ,EAAM,OAAO,CAAC,EAAgB,GACtC,EAAoB,EAAsB,EAAiB,MAAM,AACnE,CAGA,IAAM,EAAgB,AAAC,GACrB,IAAI,IACF,EAAY,KAAK,CAAC,KAAK,GAAG,CAAC,AAAA,IACzB,GAAM,CAAC,EAAM,EAAM,CAAG,EAAE,IAAI,GAAG,KAAK,CAAC,KACrC,MAAO,CAAC,EAAK,OAAO,CAAC,QAAS,IAAK,WAAW,GAAO,AACvD,IAGE,EAAkB,EAAc,GAChC,EAAgB,EAAc,GAG9B,EAAiB,MAAM,IAAI,CAAC,EAAgB,OAAO,IAAI,GAAG,CAAC,CAAC,CAAC,EAAM,EAAU,GAAM,CAAA,CACvF,KAAA,EACA,UAAA,EACA,QAAS,EAAc,GAAG,CAAC,IAAS,CACtC,CAAA,EAGA,CAAA,EAAG,SAAS,CAAG,GACf,IAAM,EAAQ,EAAM,KAAK,CAAC,KACtB,EAAY,EAEhB,EAAM,OAAO,CAAC,CAAC,EAAM,KACnB,IAAM,EAAc,SAAS,aAAa,CAAC,QAuB3C,GAtBA,EAAY,KAAK,CAAC,OAAO,CAAG,eAC5B,EAAY,KAAK,CAAC,UAAU,CAAG,SAE/B,EAAK,KAAK,CAAC,IAAI,OAAO,CAAC,AAAA,IACrB,IAAM,EAAO,SAAS,aAAa,CAAC,OACpC,CAAA,EAAK,WAAW,CAAG,EACnB,EAAK,KAAK,CAAC,OAAO,CAAG,eACrB,EAAK,KAAK,CAAC,qBAAqB,CAAG,EAGP,KAAxB,GAA8B,GAAa,GAAuB,EAAY,GAChF,EAAK,SAAS,CAAC,GAAG,CAAC,kBAGrB,EAAY,WAAW,CAAC,GACxB,EAAW,IAAI,CAAC,GAChB,GACF,GAEA,EAAG,WAAW,CAAC,GAGX,EAAY,EAAM,MAAM,CAAG,EAAG,CAChC,IAAM,EAAQ,SAAS,aAAa,CAAC,OACrC,CAAA,EAAM,SAAS,CAAG,SAClB,EAAG,WAAW,CAAC,GACf,GACF,CACF,GAGA,IAAM,EAAa,SAAS,aAAa,CAAC,OAC1C,CAAA,EAAW,WAAW,CAAG,IACzB,EAAW,SAAS,CAAC,GAAG,CAAC,WACzB,EAAG,WAAW,CAAC,GA6Cf,sBA1CA,SAAS,IACP,EAAW,OAAO,CAAC,AAAC,IAClB,GAAI,CAAC,EAAW,OAEhB,IAAM,EAAO,EAAU,qBAAqB,GACtC,EAAgB,EAAK,IAAI,CAAG,EAAK,KAAK,CAAG,EACzC,EAAgB,EAAK,GAAG,CAAG,EAAK,MAAM,CAAG,EAEzC,EAAW,KAAK,IAAI,CACxB,AAAC,CAAA,EAAc,CAAC,CAAG,CAAA,GAAkB,EACrC,AAAC,CAAA,EAAc,CAAC,CAAG,CAAA,GAAkB,GAIvC,GAAI,GAAY,EAAQ,CACtB,EAAU,KAAK,CAAC,qBAAqB,CAAG,EACxC,MACF,CAGA,IAAM,EAAO,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,EAAI,EAAW,EAAQ,GAAI,GASpD,EAAc,EAAe,GAAG,CAAC,CAAC,CAAA,KAAE,CAAI,CAAA,UAAE,CAAS,CAAA,QAAE,CAAO,CAAE,GAEzD,CAAC,CAAC,EAAE,EAAK,EAAE,EADQ,EAAa,AAAA,CAAA,EAAU,CAAA,EAL3B,EAMF,CAAmB,EAExC,IAAI,CAAC,KAER,CAAA,EAAU,KAAK,CAAC,qBAAqB,CAAG,CAC1C,GAEA,sBAAsB,EACxB,EAIF,CAGe,SAAA,IAEb,AADiB,SAAS,gBAAgB,CAAC,4BAClC,OAAO,CAAC,EACnB,CArJA,OAAO,gBAAgB,CAAC,YAAa,AAAC,IACpC,EAAc,CAAC,CAAG,EAAG,OAAO,CAC5B,EAAc,CAAC,CAAG,EAAG,OAAO,AAC9B,GACA,OAAO,gBAAgB,CAAC,YAAa,AAAC,IACpC,IAAM,EAAQ,EAAG,OAAO,CAAC,EAAE,AAC3B,CAAA,EAAc,CAAC,CAAG,EAAM,OAAO,CAC/B,EAAc,CAAC,CAAG,EAAM,OAAO,AACjC,GLZyD,EGA7B,CAC1B,OAAQ,6BACR,SAAU,OACV,SAAU,IACV,QAAS,CAAA,EACT,OAAQ,CAAA,CACV,EHLO,ADOU,ECPK,MAAM,GAE1B,aAAa,CAAE,MAAO,CAAA,CAAM,GAE5B,ADGe,ECHA,OAAO,CAAC,CAAC,CAAA,QAAE,CAAO,CAAA,UAAE,CAAS,CAAE,IAC5C,eAAe,MAAM,CAAC,EAAS,OAAO,MAAM,CAAC,CAAC,EAAG,EAAc,GACjE,IDEF,AAAA,e,EENE,IAAM,EAAW,SAAS,gBAAgB,CAAC,YAC3C,AAAA,CAAA,A,C,EAAA,I,E,U,C,E,O,C,CAAA,EAAY,IAAI,CAAC,EACnB,IFKA,AAAA,eKqLQ,EA9LJ,IAAM,EAAO,SAAS,aAAa,CAAC,oBAC9B,EAAO,SAAS,aAAa,CAAC,YAEpC,GAAI,CAAC,GAAQ,CAAC,EAAM,OAEpB,IAAM,EAAmB,CACrB,gBAAiB,IACjB,iBAAkB,KAClB,iBAAkB,GAClB,iBAAkB,EACtB,EAEM,EAAQ,CAAC,EAAO,EAAM,CAAC,CAAE,EAAM,GAAG,GAAK,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,EAAO,GAAM,GACtE,EAAQ,CAAC,EAAO,EAAY,CAAC,GAAK,WAAW,EAAM,OAAO,CAAC,IAC3D,EAAS,CAAC,EAAO,EAAS,EAAS,EAAO,IAC5C,EAAM,EAAU,AAAA,CAAA,EAAQ,CAAA,EAAU,CAAA,EAAQ,CAAA,EAAa,CAAA,EAAU,CAAA,GAC/D,EAAiB,AAAC,GAAO,EAAI,GAAM,EAAI,EAAI,EAAI,EAAI,EAAI,KAAK,GAAG,CAAC,GAAK,EAAI,EAAG,GAAK,EAEnF,EAAQ,KAEN,EAAsB,CAAC,EAAS,KAClC,IAAM,EAAO,EAAK,qBAAqB,GACjC,EAAQ,EAAK,KAAK,CAClB,EAAS,EAAK,MAAM,CAEpB,EAAW,EAAM,IAAO,EAAS,GACjC,EAAW,EAAM,IAAO,EAAU,GAClC,EAAU,EAAW,GACrB,EAAU,EAAW,GAIrB,EAAa,EAAM,AADR,KAAK,KAAK,CAAC,EAAS,GACD,GAAI,EAAG,GACrC,EAAW,EAAM,EAAW,IAAK,EAAG,GACpC,EAAU,EAAM,EAAW,IAAK,EAAG,GAczC,OAAO,OAAO,CAZK,CACf,cAAe,CAAA,EAAG,EAAS,CAAC,CAAC,CAC7B,cAAe,CAAA,EAAG,EAAS,CAAC,CAAC,CAC7B,iBAAkB,CAAA,EAAG,EAAO,EAAU,EAAG,IAAK,GAAI,IAAI,CAAC,CAAC,CACxD,iBAAkB,CAAA,EAAG,EAAO,EAAU,EAAG,IAAK,GAAI,IAAI,CAAC,CAAC,CACxD,wBAAyB,CAAA,EAAG,EAAA,CAAY,CACxC,sBAAuB,CAAA,EAAG,EAAA,CAAU,CACpC,qBAAsB,CAAA,EAAG,EAAA,CAAS,CAClC,aAAc,CAAA,EAAG,EAAM,CAAE,CAAA,EAAU,CAAA,GAAI,GAAG,CAAC,CAC3C,aAAc,CAAA,EAAG,EAAM,EAAU,GAAG,GAAG,CAAC,AAC5C,GAE2B,OAAO,CAAC,CAAC,CAAC,EAAU,EAAM,IACjD,EAAK,KAAK,CAAC,WAAW,CAAC,EAAU,EACrC,EACJ,EAEM,EAAwB,CAAC,EAAU,EAAQ,KAC7C,IAAM,EAAY,YAAY,GAAG,GAC3B,EAAO,EAAK,qBAAqB,GACjC,EAAU,EAAK,KAAK,CAAG,EACvB,EAAU,EAAK,MAAM,CAAG,EAExB,EAAgB,AAAC,IAEnB,IAAM,EAAW,EAAM,AADP,CAAA,EAAc,CAA9B,EACiC,EAAU,EAAG,GACxC,EAAgB,EAAe,GAIrC,EAHiB,EAAO,EAAe,EAAG,EAAG,EAAQ,GACpC,EAAO,EAAe,EAAG,EAAG,EAAQ,IAIjD,EAAW,GACX,CAAA,EAAQ,sBAAsB,EADlC,CAGJ,EACA,EAAQ,sBAAsB,EAClC,EAEM,EAAkB,KAChB,IACA,qBAAqB,GACrB,EAAQ,KAEhB,EAGM,EAAqB,KACvB,IACA,EAAK,SAAS,CAAC,GAAG,CAAC,UACnB,EAAK,SAAS,CAAC,GAAG,CAAC,SACvB,EAEM,EAAoB,AAAC,IACvB,GAAI,CAAC,EAAK,SAAS,CAAC,QAAQ,CAAC,UAAW,OAExC,IAAM,EAAO,EAAK,qBAAqB,GAIvC,EAHgB,EAAM,OAAO,CAAG,EAAK,IAAI,CACzB,EAAM,OAAO,CAAG,EAAK,GAAG,CAG5C,EAEM,EAAqB,AAAC,IACxB,IAAM,EAAO,EAAK,qBAAqB,GACjC,EAAU,EAAM,OAAO,CAAG,EAAK,IAAI,CACnC,EAAU,EAAM,OAAO,CAAG,EAAK,GAAG,CAExC,EAAsB,EAAiB,eAAe,CAAE,EAAS,GACjE,EAAK,SAAS,CAAC,MAAM,CAAC,UACtB,EAAK,SAAS,CAAC,MAAM,CAAC,SAC1B,EAGA,EAAK,gBAAgB,CAAC,eAAgB,GACtC,EAAK,gBAAgB,CAAC,cAAe,GACrC,EAAK,gBAAgB,CAAC,eAAgB,GAGtC,EAAK,gBAAgB,CAAC,aAAc,GACpC,EAAK,gBAAgB,CAAC,YAAa,GACnC,EAAK,gBAAgB,CAAC,aAAc,GAGpC,IAAI,EAAe,CAAA,EAEnB,EAAK,gBAAgB,CAAC,aAAc,AAAC,IACjC,EAAM,cAAc,GACpB,EAAe,CAAA,EACf,IAEA,IAAM,EAAQ,EAAM,OAAO,CAAC,EAAE,CAC9B,GAAI,EAAO,CACP,IAAM,EAAO,EAAK,qBAAqB,GAGvC,EAFgB,EAAM,OAAO,CAAG,EAAK,IAAI,CACzB,EAAM,OAAO,CAAG,EAAK,GAAG,CAE5C,CACJ,GAEA,EAAK,gBAAgB,CAAC,YAAa,AAAC,IAChC,GAAI,CAAC,EAAc,OACnB,EAAM,cAAc,GAEpB,IAAM,EAAQ,EAAM,OAAO,CAAC,EAAE,CAC9B,GAAI,EAAO,CACP,IAAM,EAAO,EAAK,qBAAqB,GAGvC,EAFgB,EAAM,OAAO,CAAG,EAAK,IAAI,CACzB,EAAM,OAAO,CAAG,EAAK,GAAG,CAE5C,CACJ,GAEA,EAAK,gBAAgB,CAAC,WAAY,AAAC,IAC/B,GAAI,CAAC,EAAc,OACnB,EAAM,cAAc,GACpB,EAAe,CAAA,EAEf,IAAM,EAAO,EAAK,qBAAqB,GACjC,EAAU,EAAK,KAAK,CAAG,EACvB,EAAU,EAAK,MAAM,CAAG,EAE9B,EAAsB,EAAiB,eAAe,CAAE,EAAS,GACjE,EAAK,SAAS,CAAC,MAAM,CAAC,UACtB,EAAK,SAAS,CAAC,MAAM,CAAC,SAC1B,GAGA,IAAM,EAAiB,KACnB,IAAM,EAAO,EAAK,qBAAqB,GACvC,GAAI,AAAe,IAAf,EAAK,KAAK,EAAU,AAAgB,IAAhB,EAAK,MAAM,CAAQ,CACvC,WAAW,EAAgB,KAC3B,MACJ,CAEA,IAAM,EAAW,EAAK,KAAK,CAAG,EAAiB,gBAAgB,CACzD,EAAW,EAAiB,gBAAgB,CAElD,EAAoB,EAAU,GAG9B,WAAW,KACP,EAAsB,EAAiB,gBAAgB,CAAE,EAAU,EACvE,EAAG,IACP,CAGI,AAAwB,CAAA,YAAxB,SAAS,UAAU,CACnB,SAAS,gBAAgB,CAAC,mBAAoB,GAE9C,IAKJ,OAAO,gBAAgB,CAAC,SAAU,KAC9B,aAAa,GACb,EAAgB,WAAW,KACvB,IACA,IAAM,EAAO,EAAK,qBAAqB,GAGvC,EAFgB,EAAK,KAAK,CAAG,EACb,EAAK,MAAM,CAAG,EAElC,EAAG,IACP,GAGA,IAAM,EAAa,SAAS,aAAa,CAAC,mBACtC,IACA,EAAW,KAAK,CAAC,aAAa,CAAG,OACjC,EAAW,gBAAgB,CAAC,QAAS,AAAC,IAClC,EAAM,eAAe,GAErB,IAAM,EAAiB,SAAS,aAAa,CAAC,YAC1C,GACA,EAAe,cAAc,CAAC,CAAE,SAAU,QAAS,EAE3D,GAER,IL7MA,AAAA,IAGA,SAAS,gBAAgB,CAAC,mBAAoB,KAE1C,AAD0B,SAAS,gBAAgB,CAAC,mBAClC,OAAO,CAAC,EAC9B,GAGA,MAAM,EAAe,KACjB,IAAM,EAAe,SAAS,aAAa,CAAC,wCAE5C,GAAI,CAAC,EAAc,CACf,QAAQ,IAAI,CAAC,8BACb,MACJ,CAGA,IAAM,EAAgB,AAAC,IACf,GACA,SAAS,eAAe,CAAC,YAAY,CAAC,aAAc,QACpD,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,aAC5B,EAAa,OAAO,CAAG,CAAA,IAEvB,SAAS,eAAe,CAAC,YAAY,CAAC,aAAc,SACpD,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAC/B,EAAa,OAAO,CAAG,CAAA,EAE/B,EAmBA,EAAc,AAAiB,SADV,AAfC,CAAA,KAClB,IAAM,EAAQ,aAAa,OAAO,CAAC,gBAGnC,AAAK,EAOE,EANH,AAAI,OAAO,UAAU,EAAI,OAAO,UAAU,CAAC,gCAAgC,OAAO,CACvE,OAEJ,OAIf,CAAA,KAqBA,EAAa,gBAAgB,CAAC,SAdV,AAAC,IACjB,IAAM,EAAS,EAAE,MAAM,CAAC,OAAO,CACzB,EAAQ,EAAS,OAAS,QAEhC,EAAc,GACd,aAAa,OAAO,CAAC,QAAS,GAG9B,OAAO,aAAa,CAAC,IAAI,YAAY,cAAe,CAChD,OAAQ,CAAE,MAAA,EAAO,OAAA,CAAO,CAC5B,GACJ,EAGqD,CAAA,GAGjD,OAAO,UAAU,EAEjB,AADmB,OAAO,UAAU,CAAC,gCAC1B,gBAAgB,CAAC,SAAU,AAAC,IAE9B,aAAa,OAAO,CAAC,UACtB,EAAc,EAAE,OAAO,CAE/B,EAER,EAGA,IAGA,SAAS,gBAAgB,CAAC,mBAAoB,KAC1C,GACJ","sources":["<anon>","src/index.js","src/scripts/scrollReveal.js","src/scripts/tiltAnimation.js","node_modules/vanilla-tilt/lib/vanilla-tilt.js","src/data/scrollRevealConfig.js","src/scripts/profileCard.js","src/scripts/variableProximity.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nfunction $6f019d1f45ba2738$export$2e2bcd8739ae039(targetElements, defaultProps) {\n    if (!targetElements.length) return;\n    ScrollReveal({\n        reset: false\n    });\n    targetElements.forEach(({ element: element, animation: animation })=>{\n        ScrollReveal().reveal(element, Object.assign({}, defaultProps, animation));\n    });\n}\n\n\nvar $b5f6d4efc654cf78$exports = {};\n'use strict';\nvar $b5f6d4efc654cf78$var$classCallCheck = function(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n};\n/**\r\n * Created by Sergiu Șandor (micku7zu) on 1/27/2017.\r\n * Original idea: https://github.com/gijsroge/tilt.js\r\n * MIT License.\r\n * Version 1.8.0\r\n */ var $b5f6d4efc654cf78$var$VanillaTilt = function() {\n    function VanillaTilt(element) {\n        var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        $b5f6d4efc654cf78$var$classCallCheck(this, VanillaTilt);\n        if (!(element instanceof Node)) throw \"Can't initialize VanillaTilt because \" + element + \" is not a Node.\";\n        this.width = null;\n        this.height = null;\n        this.clientWidth = null;\n        this.clientHeight = null;\n        this.left = null;\n        this.top = null;\n        // for Gyroscope sampling\n        this.gammazero = null;\n        this.betazero = null;\n        this.lastgammazero = null;\n        this.lastbetazero = null;\n        this.transitionTimeout = null;\n        this.updateCall = null;\n        this.event = null;\n        this.updateBind = this.update.bind(this);\n        this.resetBind = this.reset.bind(this);\n        this.element = element;\n        this.settings = this.extendSettings(settings);\n        this.reverse = this.settings.reverse ? -1 : 1;\n        this.resetToStart = VanillaTilt.isSettingTrue(this.settings[\"reset-to-start\"]);\n        this.glare = VanillaTilt.isSettingTrue(this.settings.glare);\n        this.glarePrerender = VanillaTilt.isSettingTrue(this.settings[\"glare-prerender\"]);\n        this.fullPageListening = VanillaTilt.isSettingTrue(this.settings[\"full-page-listening\"]);\n        this.gyroscope = VanillaTilt.isSettingTrue(this.settings.gyroscope);\n        this.gyroscopeSamples = this.settings.gyroscopeSamples;\n        this.elementListener = this.getElementListener();\n        if (this.glare) this.prepareGlare();\n        if (this.fullPageListening) this.updateClientSize();\n        this.addEventListeners();\n        this.reset();\n        if (this.resetToStart === false) {\n            this.settings.startX = 0;\n            this.settings.startY = 0;\n        }\n    }\n    VanillaTilt.isSettingTrue = function isSettingTrue(setting) {\n        return setting === \"\" || setting === true || setting === 1;\n    };\n    /**\r\n   * Method returns element what will be listen mouse events\r\n   * @return {Node}\r\n   */ VanillaTilt.prototype.getElementListener = function getElementListener() {\n        if (this.fullPageListening) return window.document;\n        if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\n            var mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\n            if (mouseEventElement) return mouseEventElement;\n        }\n        if (this.settings[\"mouse-event-element\"] instanceof Node) return this.settings[\"mouse-event-element\"];\n        return this.element;\n    };\n    /**\r\n   * Method set listen methods for this.elementListener\r\n   * @return {Node}\r\n   */ VanillaTilt.prototype.addEventListeners = function addEventListeners() {\n        this.onMouseEnterBind = this.onMouseEnter.bind(this);\n        this.onMouseMoveBind = this.onMouseMove.bind(this);\n        this.onMouseLeaveBind = this.onMouseLeave.bind(this);\n        this.onWindowResizeBind = this.onWindowResize.bind(this);\n        this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\n        this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\n        this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\n        this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\n        if (this.glare || this.fullPageListening) window.addEventListener(\"resize\", this.onWindowResizeBind);\n        if (this.gyroscope) window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\n    };\n    /**\r\n   * Method remove event listeners from current this.elementListener\r\n   */ VanillaTilt.prototype.removeEventListeners = function removeEventListeners() {\n        this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\n        this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\n        this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\n        if (this.gyroscope) window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\n        if (this.glare || this.fullPageListening) window.removeEventListener(\"resize\", this.onWindowResizeBind);\n    };\n    VanillaTilt.prototype.destroy = function destroy() {\n        clearTimeout(this.transitionTimeout);\n        if (this.updateCall !== null) cancelAnimationFrame(this.updateCall);\n        this.reset();\n        this.removeEventListeners();\n        this.element.vanillaTilt = null;\n        delete this.element.vanillaTilt;\n        this.element = null;\n    };\n    VanillaTilt.prototype.onDeviceOrientation = function onDeviceOrientation(event) {\n        if (event.gamma === null || event.beta === null) return;\n        this.updateElementPosition();\n        if (this.gyroscopeSamples > 0) {\n            this.lastgammazero = this.gammazero;\n            this.lastbetazero = this.betazero;\n            if (this.gammazero === null) {\n                this.gammazero = event.gamma;\n                this.betazero = event.beta;\n            } else {\n                this.gammazero = (event.gamma + this.lastgammazero) / 2;\n                this.betazero = (event.beta + this.lastbetazero) / 2;\n            }\n            this.gyroscopeSamples -= 1;\n        }\n        var totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\n        var totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\n        var degreesPerPixelX = totalAngleX / this.width;\n        var degreesPerPixelY = totalAngleY / this.height;\n        var angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);\n        var angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);\n        var posX = angleX / degreesPerPixelX;\n        var posY = angleY / degreesPerPixelY;\n        if (this.updateCall !== null) cancelAnimationFrame(this.updateCall);\n        this.event = {\n            clientX: posX + this.left,\n            clientY: posY + this.top\n        };\n        this.updateCall = requestAnimationFrame(this.updateBind);\n    };\n    VanillaTilt.prototype.onMouseEnter = function onMouseEnter() {\n        this.updateElementPosition();\n        this.element.style.willChange = \"transform\";\n        this.setTransition();\n    };\n    VanillaTilt.prototype.onMouseMove = function onMouseMove(event) {\n        if (this.updateCall !== null) cancelAnimationFrame(this.updateCall);\n        this.event = event;\n        this.updateCall = requestAnimationFrame(this.updateBind);\n    };\n    VanillaTilt.prototype.onMouseLeave = function onMouseLeave() {\n        this.setTransition();\n        if (this.settings.reset) requestAnimationFrame(this.resetBind);\n    };\n    VanillaTilt.prototype.reset = function reset() {\n        this.onMouseEnter();\n        if (this.fullPageListening) this.event = {\n            clientX: (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.clientWidth,\n            clientY: (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.clientHeight\n        };\n        else this.event = {\n            clientX: this.left + (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.width,\n            clientY: this.top + (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.height\n        };\n        var backupScale = this.settings.scale;\n        this.settings.scale = 1;\n        this.update();\n        this.settings.scale = backupScale;\n        this.resetGlare();\n    };\n    VanillaTilt.prototype.resetGlare = function resetGlare() {\n        if (this.glare) {\n            this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\n            this.glareElement.style.opacity = \"0\";\n        }\n    };\n    VanillaTilt.prototype.getValues = function getValues() {\n        var x = void 0, y = void 0;\n        if (this.fullPageListening) {\n            x = this.event.clientX / this.clientWidth;\n            y = this.event.clientY / this.clientHeight;\n        } else {\n            x = (this.event.clientX - this.left) / this.width;\n            y = (this.event.clientY - this.top) / this.height;\n        }\n        x = Math.min(Math.max(x, 0), 1);\n        y = Math.min(Math.max(y, 0), 1);\n        var tiltX = (this.reverse * (this.settings.max - x * this.settings.max * 2)).toFixed(2);\n        var tiltY = (this.reverse * (y * this.settings.max * 2 - this.settings.max)).toFixed(2);\n        var angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\n        return {\n            tiltX: tiltX,\n            tiltY: tiltY,\n            percentageX: x * 100,\n            percentageY: y * 100,\n            angle: angle\n        };\n    };\n    VanillaTilt.prototype.updateElementPosition = function updateElementPosition() {\n        var rect = this.element.getBoundingClientRect();\n        this.width = this.element.offsetWidth;\n        this.height = this.element.offsetHeight;\n        this.left = rect.left;\n        this.top = rect.top;\n    };\n    VanillaTilt.prototype.update = function update() {\n        var values = this.getValues();\n        this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" + \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" + \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" + \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\n        if (this.glare) {\n            this.glareElement.style.transform = \"rotate(\" + values.angle + \"deg) translate(-50%, -50%)\";\n            this.glareElement.style.opacity = \"\" + values.percentageY * this.settings[\"max-glare\"] / 100;\n        }\n        this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\n            \"detail\": values\n        }));\n        this.updateCall = null;\n    };\n    /**\r\n   * Appends the glare element (if glarePrerender equals false)\r\n   * and sets the default style\r\n   */ VanillaTilt.prototype.prepareGlare = function prepareGlare() {\n        // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\n        if (!this.glarePrerender) {\n            // Create glare element\n            var jsTiltGlare = document.createElement(\"div\");\n            jsTiltGlare.classList.add(\"js-tilt-glare\");\n            var jsTiltGlareInner = document.createElement(\"div\");\n            jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\n            jsTiltGlare.appendChild(jsTiltGlareInner);\n            this.element.appendChild(jsTiltGlare);\n        }\n        this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\n        this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\n        if (this.glarePrerender) return;\n        Object.assign(this.glareElementWrapper.style, {\n            \"position\": \"absolute\",\n            \"top\": \"0\",\n            \"left\": \"0\",\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"overflow\": \"hidden\",\n            \"pointer-events\": \"none\",\n            \"border-radius\": \"inherit\"\n        });\n        Object.assign(this.glareElement.style, {\n            \"position\": \"absolute\",\n            \"top\": \"50%\",\n            \"left\": \"50%\",\n            \"pointer-events\": \"none\",\n            \"background-image\": \"linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)\",\n            \"transform\": \"rotate(180deg) translate(-50%, -50%)\",\n            \"transform-origin\": \"0% 0%\",\n            \"opacity\": \"0\"\n        });\n        this.updateGlareSize();\n    };\n    VanillaTilt.prototype.updateGlareSize = function updateGlareSize() {\n        if (this.glare) {\n            var glareSize = (this.element.offsetWidth > this.element.offsetHeight ? this.element.offsetWidth : this.element.offsetHeight) * 2;\n            Object.assign(this.glareElement.style, {\n                \"width\": glareSize + \"px\",\n                \"height\": glareSize + \"px\"\n            });\n        }\n    };\n    VanillaTilt.prototype.updateClientSize = function updateClientSize() {\n        this.clientWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n        this.clientHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    };\n    VanillaTilt.prototype.onWindowResize = function onWindowResize() {\n        this.updateGlareSize();\n        this.updateClientSize();\n    };\n    VanillaTilt.prototype.setTransition = function setTransition() {\n        var _this = this;\n        clearTimeout(this.transitionTimeout);\n        this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\n        if (this.glare) this.glareElement.style.transition = \"opacity \" + this.settings.speed + \"ms \" + this.settings.easing;\n        this.transitionTimeout = setTimeout(function() {\n            _this.element.style.transition = \"\";\n            if (_this.glare) _this.glareElement.style.transition = \"\";\n        }, this.settings.speed);\n    };\n    /**\r\n   * Method return patched settings of instance\r\n   * @param {boolean} settings.reverse - reverse the tilt direction\r\n   * @param {number} settings.max - max tilt rotation (degrees)\r\n   * @param {startX} settings.startX - the starting tilt on the X axis, in degrees. Default: 0\r\n   * @param {startY} settings.startY - the starting tilt on the Y axis, in degrees. Default: 0\r\n   * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\r\n   * @param {string} settings.easing - Easing on enter/exit\r\n   * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\r\n   * @param {number} settings.speed - Speed of the enter/exit transition\r\n   * @param {boolean} settings.transition - Set a transition on enter/exit\r\n   * @param {string|null} settings.axis - What axis should be enabled. Can be \"x\" or \"y\"\r\n   * @param {boolean} settings.glare - if it should have a \"glare\" effect\r\n   * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\r\n   * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\r\n   * @param {boolean} settings.full-page-listening - If true, parallax effect will listen to mouse move events on the whole document, not only the selected element\r\n   * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\r\n   * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\r\n   * @param {boolean} settings.reset-to-start - true = On reset event (mouse leave) will return to initial start angle (if startX or startY is set)\r\n   * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\r\n   * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\r\n   * @param {gyroscopeSamples} settings.gyroscopeSamples - How many gyroscope moves to decide the starting position.\r\n   */ VanillaTilt.prototype.extendSettings = function extendSettings(settings) {\n        var defaultSettings = {\n            reverse: false,\n            max: 15,\n            startX: 0,\n            startY: 0,\n            perspective: 1000,\n            easing: \"cubic-bezier(.03,.98,.52,.99)\",\n            scale: 1,\n            speed: 300,\n            transition: true,\n            axis: null,\n            glare: false,\n            \"max-glare\": 1,\n            \"glare-prerender\": false,\n            \"full-page-listening\": false,\n            \"mouse-event-element\": null,\n            reset: true,\n            \"reset-to-start\": true,\n            gyroscope: true,\n            gyroscopeMinAngleX: -45,\n            gyroscopeMaxAngleX: 45,\n            gyroscopeMinAngleY: -45,\n            gyroscopeMaxAngleY: 45,\n            gyroscopeSamples: 10\n        };\n        var newSettings = {};\n        for(var property in defaultSettings){\n            if (property in settings) newSettings[property] = settings[property];\n            else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\n                var attribute = this.element.getAttribute(\"data-tilt-\" + property);\n                try {\n                    newSettings[property] = JSON.parse(attribute);\n                } catch (e) {\n                    newSettings[property] = attribute;\n                }\n            } else newSettings[property] = defaultSettings[property];\n        }\n        return newSettings;\n    };\n    VanillaTilt.init = function init(elements, settings) {\n        if (elements instanceof Node) elements = [\n            elements\n        ];\n        if (elements instanceof NodeList) elements = [].slice.call(elements);\n        if (!(elements instanceof Array)) return;\n        elements.forEach(function(element) {\n            if (!(\"vanillaTilt\" in element)) element.vanillaTilt = new VanillaTilt(element, settings);\n        });\n    };\n    return VanillaTilt;\n}();\nif (typeof document !== \"undefined\") {\n    /* expose the class to window */ window.VanillaTilt = $b5f6d4efc654cf78$var$VanillaTilt;\n    /**\r\n   * Auto load\r\n   */ $b5f6d4efc654cf78$var$VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\n}\n$b5f6d4efc654cf78$exports = $b5f6d4efc654cf78$var$VanillaTilt;\n\n\nfunction $b8855ed206bb3c2e$export$2e2bcd8739ae039() {\n    const elements = document.querySelectorAll(\".js-tilt\");\n    (0, (/*@__PURE__*/$parcel$interopDefault($b5f6d4efc654cf78$exports))).init(elements);\n}\n\n\nconst $d859da13df4a30ff$export$9c21a3269931e1e6 = {\n    easing: \"cubic-bezier(0.5, 0, 0, 1)\",\n    distance: \"30px\",\n    duration: 1000,\n    desktop: true,\n    mobile: true\n};\nconst $d859da13df4a30ff$export$adcf75ad64a03007 = [\n    {\n        element: \".section-title\",\n        animation: {\n            delay: 300,\n            distance: \"0px\",\n            origin: \"bottom\"\n        }\n    },\n    {\n        element: \".hero-title\",\n        animation: {\n            delay: 500,\n            origin: window.innerWidth > 768 ? \"left\" : \"bottom\"\n        }\n    },\n    {\n        element: \".hero-cta\",\n        animation: {\n            delay: 1000,\n            origin: window.innerWidth > 768 ? \"left\" : \"bottom\"\n        }\n    },\n    {\n        element: \".about-wrapper__image\",\n        animation: {\n            delay: 600,\n            origin: \"bottom\"\n        }\n    },\n    {\n        element: \".about-wrapper__info\",\n        animation: {\n            delay: 1000,\n            origin: window.innerWidth > 768 ? \"left\" : \"bottom\"\n        }\n    },\n    {\n        element: \".project-wrapper__text\",\n        animation: {\n            delay: 500,\n            origin: window.innerWidth > 768 ? \"left\" : \"bottom\"\n        }\n    },\n    {\n        element: \".project-wrapper__image\",\n        animation: {\n            delay: 1000,\n            origin: window.innerWidth > 768 ? \"right\" : \"bottom\"\n        }\n    },\n    {\n        element: \".contact-wrapper\",\n        animation: {\n            delay: 800,\n            origin: \"bottom\"\n        }\n    }\n];\n\n\nfunction $625f9b74d64c73e3$export$2e2bcd8739ae039() {\n    const wrap = document.querySelector(\".pc-card-wrapper\");\n    const card = document.querySelector(\".pc-card\");\n    if (!wrap || !card) return;\n    const ANIMATION_CONFIG = {\n        SMOOTH_DURATION: 600,\n        INITIAL_DURATION: 1500,\n        INITIAL_X_OFFSET: 70,\n        INITIAL_Y_OFFSET: 60\n    };\n    const clamp = (value, min = 0, max = 100)=>Math.min(Math.max(value, min), max);\n    const round = (value, precision = 3)=>parseFloat(value.toFixed(precision));\n    const adjust = (value, fromMin, fromMax, toMin, toMax)=>round(toMin + (toMax - toMin) * (value - fromMin) / (fromMax - fromMin));\n    const easeInOutCubic = (x)=>x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n    let rafId = null;\n    const updateCardTransform = (offsetX, offsetY)=>{\n        const rect = card.getBoundingClientRect();\n        const width = rect.width;\n        const height = rect.height;\n        const percentX = clamp(100 / width * offsetX);\n        const percentY = clamp(100 / height * offsetY);\n        const centerX = percentX - 50;\n        const centerY = percentY - 50;\n        // Calculate distance from center for opacity effects\n        const distance = Math.hypot(centerX, centerY);\n        const fromCenter = clamp(distance / 50, 0, 1);\n        const fromLeft = clamp(percentX / 100, 0, 1);\n        const fromTop = clamp(percentY / 100, 0, 1);\n        const properties = {\n            \"--pointer-x\": `${percentX}%`,\n            \"--pointer-y\": `${percentY}%`,\n            \"--background-x\": `${adjust(percentX, 0, 100, 35, 65)}%`,\n            \"--background-y\": `${adjust(percentY, 0, 100, 35, 65)}%`,\n            \"--pointer-from-center\": `${fromCenter}`,\n            \"--pointer-from-left\": `${fromLeft}`,\n            \"--pointer-from-top\": `${fromTop}`,\n            \"--rotate-x\": `${round(-(centerX / 5))}deg`,\n            \"--rotate-y\": `${round(centerY / 4)}deg`\n        };\n        Object.entries(properties).forEach(([property, value])=>{\n            wrap.style.setProperty(property, value);\n        });\n    };\n    const createSmoothAnimation = (duration, startX, startY)=>{\n        const startTime = performance.now();\n        const rect = wrap.getBoundingClientRect();\n        const targetX = rect.width / 2;\n        const targetY = rect.height / 2;\n        const animationLoop = (currentTime)=>{\n            const elapsed = currentTime - startTime;\n            const progress = clamp(elapsed / duration, 0, 1);\n            const easedProgress = easeInOutCubic(progress);\n            const currentX = adjust(easedProgress, 0, 1, startX, targetX);\n            const currentY = adjust(easedProgress, 0, 1, startY, targetY);\n            updateCardTransform(currentX, currentY);\n            if (progress < 1) rafId = requestAnimationFrame(animationLoop);\n        };\n        rafId = requestAnimationFrame(animationLoop);\n    };\n    const cancelAnimation = ()=>{\n        if (rafId) {\n            cancelAnimationFrame(rafId);\n            rafId = null;\n        }\n    };\n    // Event handlers\n    const handlePointerEnter = ()=>{\n        cancelAnimation();\n        wrap.classList.add(\"active\");\n        card.classList.add(\"active\");\n    };\n    const handlePointerMove = (event)=>{\n        if (!wrap.classList.contains(\"active\")) return;\n        const rect = card.getBoundingClientRect();\n        const offsetX = event.clientX - rect.left;\n        const offsetY = event.clientY - rect.top;\n        updateCardTransform(offsetX, offsetY);\n    };\n    const handlePointerLeave = (event)=>{\n        const rect = card.getBoundingClientRect();\n        const offsetX = event.clientX - rect.left;\n        const offsetY = event.clientY - rect.top;\n        createSmoothAnimation(ANIMATION_CONFIG.SMOOTH_DURATION, offsetX, offsetY);\n        wrap.classList.remove(\"active\");\n        card.classList.remove(\"active\");\n    };\n    // Add modern pointer events\n    card.addEventListener(\"pointerenter\", handlePointerEnter);\n    card.addEventListener(\"pointermove\", handlePointerMove);\n    card.addEventListener(\"pointerleave\", handlePointerLeave);\n    // Fallback for older browsers\n    card.addEventListener(\"mouseenter\", handlePointerEnter);\n    card.addEventListener(\"mousemove\", handlePointerMove);\n    card.addEventListener(\"mouseleave\", handlePointerLeave);\n    // Touch support\n    let touchStarted = false;\n    card.addEventListener(\"touchstart\", (event)=>{\n        event.preventDefault();\n        touchStarted = true;\n        handlePointerEnter();\n        const touch = event.touches[0];\n        if (touch) {\n            const rect = card.getBoundingClientRect();\n            const offsetX = touch.clientX - rect.left;\n            const offsetY = touch.clientY - rect.top;\n            updateCardTransform(offsetX, offsetY);\n        }\n    });\n    card.addEventListener(\"touchmove\", (event)=>{\n        if (!touchStarted) return;\n        event.preventDefault();\n        const touch = event.touches[0];\n        if (touch) {\n            const rect = card.getBoundingClientRect();\n            const offsetX = touch.clientX - rect.left;\n            const offsetY = touch.clientY - rect.top;\n            updateCardTransform(offsetX, offsetY);\n        }\n    });\n    card.addEventListener(\"touchend\", (event)=>{\n        if (!touchStarted) return;\n        event.preventDefault();\n        touchStarted = false;\n        const rect = card.getBoundingClientRect();\n        const centerX = rect.width / 2;\n        const centerY = rect.height / 2;\n        createSmoothAnimation(ANIMATION_CONFIG.SMOOTH_DURATION, centerX, centerY);\n        wrap.classList.remove(\"active\");\n        card.classList.remove(\"active\");\n    });\n    // Initialize card position\n    const initializeCard = ()=>{\n        const rect = wrap.getBoundingClientRect();\n        if (rect.width === 0 || rect.height === 0) {\n            setTimeout(initializeCard, 100);\n            return;\n        }\n        const initialX = rect.width - ANIMATION_CONFIG.INITIAL_X_OFFSET;\n        const initialY = ANIMATION_CONFIG.INITIAL_Y_OFFSET;\n        updateCardTransform(initialX, initialY);\n        // Start initial animation after a short delay\n        setTimeout(()=>{\n            createSmoothAnimation(ANIMATION_CONFIG.INITIAL_DURATION, initialX, initialY);\n        }, 200);\n    };\n    // Initialize when DOM is ready\n    if (document.readyState === 'loading') document.addEventListener('DOMContentLoaded', initializeCard);\n    else initializeCard();\n    // Handle window resize\n    let resizeTimeout;\n    window.addEventListener('resize', ()=>{\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(()=>{\n            cancelAnimation();\n            const rect = wrap.getBoundingClientRect();\n            const centerX = rect.width / 2;\n            const centerY = rect.height / 2;\n            updateCardTransform(centerX, centerY);\n        }, 150);\n    });\n    // Make contact button functional\n    const contactBtn = document.querySelector('.pc-contact-btn');\n    if (contactBtn) {\n        contactBtn.style.pointerEvents = 'auto';\n        contactBtn.addEventListener('click', (event)=>{\n            event.stopPropagation();\n            // Scroll to contact section\n            const contactSection = document.querySelector('#contact');\n            if (contactSection) contactSection.scrollIntoView({\n                behavior: 'smooth'\n            });\n        });\n    }\n}\n\n\n// This module handles the interactive variable font effect.\n// Stores the current mouse position.\nconst $16dcc2da04bcab42$var$mousePosition = {\n    x: 0,\n    y: 0\n};\nwindow.addEventListener(\"mousemove\", (ev)=>{\n    $16dcc2da04bcab42$var$mousePosition.x = ev.clientX;\n    $16dcc2da04bcab42$var$mousePosition.y = ev.clientY;\n});\nwindow.addEventListener(\"touchmove\", (ev)=>{\n    const touch = ev.touches[0];\n    $16dcc2da04bcab42$var$mousePosition.x = touch.clientX;\n    $16dcc2da04bcab42$var$mousePosition.y = touch.clientY;\n});\n/**\n * Initializes the variable proximity effect on a single element.\n * @param {HTMLElement} el - The target element with data attributes.\n */ function $16dcc2da04bcab42$var$initVariableText(el) {\n    let label = el.dataset.text;\n    const fromSettings = el.dataset.fromSettings;\n    const toSettings = el.dataset.toSettings;\n    const radius = parseInt(el.dataset.radius, 10);\n    const falloff = \"linear\";\n    const letterRefs = [];\n    // Find and mark the text to be highlighted (e.g., \"[[Your Name]]\").\n    const highlightRegex = /\\[\\[(.*?)\\]\\]/;\n    const match = label.match(highlightRegex);\n    let highlightStartIndex = -1;\n    let highlightEndIndex = -1;\n    if (match) {\n        const highlightContent = match[1];\n        highlightStartIndex = label.indexOf(match[0]);\n        // The new label is the original string without the [[...]] markers.\n        label = label.replace(highlightRegex, highlightContent);\n        highlightEndIndex = highlightStartIndex + highlightContent.length;\n    }\n    // Parse font variation settings string into a map.\n    const parseSettings = (settingsStr)=>new Map(settingsStr.split(\",\").map((s)=>{\n            const [name, value] = s.trim().split(\" \");\n            return [\n                name.replace(/['\"]/g, \"\"),\n                parseFloat(value)\n            ];\n        }));\n    const fromSettingsMap = parseSettings(fromSettings);\n    const toSettingsMap = parseSettings(toSettings);\n    // Prepare settings for interpolation.\n    const parsedSettings = Array.from(fromSettingsMap.entries()).map(([axis, fromValue])=>({\n            axis: axis,\n            fromValue: fromValue,\n            toValue: toSettingsMap.get(axis) ?? fromValue\n        }));\n    // Split text into words to preserve spaces and handle highlighting.\n    el.innerHTML = ''; // Clear original text\n    const words = label.split(' ');\n    let charIndex = 0; // Keep track of the character index in the full string.\n    words.forEach((word, wordIndex)=>{\n        const wordWrapper = document.createElement('span');\n        wordWrapper.style.display = 'inline-block';\n        wordWrapper.style.whiteSpace = 'nowrap';\n        word.split('').forEach((letter)=>{\n            const span = document.createElement('span');\n            span.textContent = letter;\n            span.style.display = 'inline-block';\n            span.style.fontVariationSettings = fromSettings;\n            // Add highlight class if the character is part of the name.\n            if (highlightStartIndex !== -1 && charIndex >= highlightStartIndex && charIndex < highlightEndIndex) span.classList.add('name-highlight');\n            wordWrapper.appendChild(span);\n            letterRefs.push(span);\n            charIndex++;\n        });\n        el.appendChild(wordWrapper);\n        // Add a space after each word, except the last one.\n        if (wordIndex < words.length - 1) {\n            const space = document.createElement('span');\n            space.innerHTML = '&nbsp;';\n            el.appendChild(space);\n            charIndex++; // Increment for the space character.\n        }\n    });\n    // Add a hidden space for screen readers.\n    const srOnlySpan = document.createElement('span');\n    srOnlySpan.textContent = ' ';\n    srOnlySpan.classList.add('sr-only');\n    el.appendChild(srOnlySpan);\n    // Animation loop.\n    function animate() {\n        letterRefs.forEach((letterRef)=>{\n            if (!letterRef) return;\n            const rect = letterRef.getBoundingClientRect();\n            const letterCenterX = rect.left + rect.width / 2;\n            const letterCenterY = rect.top + rect.height / 2;\n            const distance = Math.sqrt(($16dcc2da04bcab42$var$mousePosition.x - letterCenterX) ** 2 + ($16dcc2da04bcab42$var$mousePosition.y - letterCenterY) ** 2);\n            // If the mouse is outside the radius, reset to initial state.\n            if (distance >= radius) {\n                letterRef.style.fontVariationSettings = fromSettings;\n                return;\n            }\n            // Calculate the influence based on distance (falloff).\n            const norm = Math.min(Math.max(1 - distance / radius, 0), 1);\n            let falloffValue;\n            switch(falloff){\n                case \"exponential\":\n                    falloffValue = norm ** 2;\n                    break;\n                case \"gaussian\":\n                    falloffValue = Math.exp(-((distance / (radius / 2)) ** 2) / 2);\n                    break;\n                default:\n                    falloffValue = norm;\n            }\n            // Interpolate and apply the new font settings.\n            const newSettings = parsedSettings.map(({ axis: axis, fromValue: fromValue, toValue: toValue })=>{\n                const interpolatedValue = fromValue + (toValue - fromValue) * falloffValue;\n                return `'${axis}' ${interpolatedValue}`;\n            }).join(\", \");\n            letterRef.style.fontVariationSettings = newSettings;\n        });\n        requestAnimationFrame(animate);\n    }\n    // Start the animation.\n    requestAnimationFrame(animate);\n}\nfunction $16dcc2da04bcab42$export$2e2bcd8739ae039() {\n    const elements = document.querySelectorAll('.variable-proximity-text');\n    elements.forEach($16dcc2da04bcab42$var$initVariableText);\n}\n\n\n// Initialize all components\n(0, $6f019d1f45ba2738$export$2e2bcd8739ae039)((0, $d859da13df4a30ff$export$adcf75ad64a03007), (0, $d859da13df4a30ff$export$9c21a3269931e1e6));\n(0, $b8855ed206bb3c2e$export$2e2bcd8739ae039)();\n(0, $625f9b74d64c73e3$export$2e2bcd8739ae039)();\n(0, $16dcc2da04bcab42$export$2e2bcd8739ae039)();\n// Initialize the Decrypted Text Effect\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    const decryptedElements = document.querySelectorAll('.decrypted-text');\n    decryptedElements.forEach((0, $16dcc2da04bcab42$export$2e2bcd8739ae039));\n});\n// Enhanced Night Mode Toggle\nconst $35da740d59af89ba$var$initDarkMode = ()=>{\n    const toggleSwitch = document.querySelector('.theme-switch input[type=\"checkbox\"]');\n    if (!toggleSwitch) {\n        console.warn('Dark mode toggle not found');\n        return;\n    }\n    // Function to apply dark mode\n    const applyDarkMode = (isDark)=>{\n        if (isDark) {\n            document.documentElement.setAttribute('data-theme', 'dark');\n            document.body.classList.add('dark-mode');\n            toggleSwitch.checked = true;\n        } else {\n            document.documentElement.setAttribute('data-theme', 'light');\n            document.body.classList.remove('dark-mode');\n            toggleSwitch.checked = false;\n        }\n    };\n    // Get saved theme preference or default to system preference\n    const getSavedTheme = ()=>{\n        const saved = localStorage.getItem('theme');\n        // If no saved preference, check system preference\n        if (!saved) {\n            if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) return 'dark';\n            return 'light';\n        }\n        return saved;\n    };\n    // Initialize theme immediately to prevent flash\n    const currentTheme = getSavedTheme();\n    applyDarkMode(currentTheme === 'dark');\n    // Theme toggle function\n    const switchTheme = (e)=>{\n        const isDark = e.target.checked;\n        const theme = isDark ? 'dark' : 'light';\n        applyDarkMode(isDark);\n        localStorage.setItem('theme', theme);\n        // Dispatch custom event for components that need to react to theme changes\n        window.dispatchEvent(new CustomEvent('themeChange', {\n            detail: {\n                theme: theme,\n                isDark: isDark\n            }\n        }));\n    };\n    // Listen for toggle changes\n    toggleSwitch.addEventListener('change', switchTheme, false);\n    // Listen for system theme changes\n    if (window.matchMedia) {\n        const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n        mediaQuery.addEventListener('change', (e)=>{\n            // Only apply system theme if user hasn't manually set a preference\n            if (!localStorage.getItem('theme')) applyDarkMode(e.matches);\n        });\n    }\n};\n// Initialize dark mode immediately\n$35da740d59af89ba$var$initDarkMode();\n// Also ensure it's applied when DOM is fully loaded\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    $35da740d59af89ba$var$initDarkMode();\n});\n\n\n//# sourceMappingURL=index.fe6f6de3.js.map\n","import initScrollReveal from \"./scripts/scrollReveal\";\nimport initTiltEffect from \"./scripts/tiltAnimation\";\nimport { targetElements, defaultProps } from \"./data/scrollRevealConfig\";\nimport initProfileCard from \"./scripts/profileCard\";\nimport initDecryptedText from \"./scripts/variableProximity\";\nimport initVariableProximity from \"./scripts/variableProximity\";\n\n// Initialize all components\ninitScrollReveal(targetElements, defaultProps);\ninitTiltEffect();\ninitProfileCard();\ninitVariableProximity(); \n\n// Initialize the Decrypted Text Effect\ndocument.addEventListener('DOMContentLoaded', () => {\n    const decryptedElements = document.querySelectorAll('.decrypted-text');\n    decryptedElements.forEach(initDecryptedText);\n});\n\n// Enhanced Night Mode Toggle\nconst initDarkMode = () => {\n    const toggleSwitch = document.querySelector('.theme-switch input[type=\"checkbox\"]');\n    \n    if (!toggleSwitch) {\n        console.warn('Dark mode toggle not found');\n        return;\n    }\n\n    // Function to apply dark mode\n    const applyDarkMode = (isDark) => {\n        if (isDark) {\n            document.documentElement.setAttribute('data-theme', 'dark');\n            document.body.classList.add('dark-mode');\n            toggleSwitch.checked = true;\n        } else {\n            document.documentElement.setAttribute('data-theme', 'light');\n            document.body.classList.remove('dark-mode');\n            toggleSwitch.checked = false;\n        }\n    };\n\n    // Get saved theme preference or default to system preference\n    const getSavedTheme = () => {\n        const saved = localStorage.getItem('theme');\n        \n        // If no saved preference, check system preference\n        if (!saved) {\n            if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n                return 'dark';\n            }\n            return 'light';\n        }\n        \n        return saved;\n    };\n\n    // Initialize theme immediately to prevent flash\n    const currentTheme = getSavedTheme();\n    applyDarkMode(currentTheme === 'dark');\n\n    // Theme toggle function\n    const switchTheme = (e) => {\n        const isDark = e.target.checked;\n        const theme = isDark ? 'dark' : 'light';\n        \n        applyDarkMode(isDark);\n        localStorage.setItem('theme', theme);\n        \n        // Dispatch custom event for components that need to react to theme changes\n        window.dispatchEvent(new CustomEvent('themeChange', { \n            detail: { theme, isDark } \n        }));\n    };\n\n    // Listen for toggle changes\n    toggleSwitch.addEventListener('change', switchTheme, false);\n\n    // Listen for system theme changes\n    if (window.matchMedia) {\n        const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n        mediaQuery.addEventListener('change', (e) => {\n            // Only apply system theme if user hasn't manually set a preference\n            if (!localStorage.getItem('theme')) {\n                applyDarkMode(e.matches);\n            }\n        });\n    }\n};\n\n// Initialize dark mode immediately\ninitDarkMode();\n\n// Also ensure it's applied when DOM is fully loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n    initDarkMode();\n});","export default function initScrollReveal(targetElements, defaultProps) {\n  if (!targetElements.length) return;\n\n  ScrollReveal({ reset: false });\n\n  targetElements.forEach(({ element, animation }) => {\n    ScrollReveal().reveal(element, Object.assign({}, defaultProps, animation));\n  });\n}\n","import VanillaTilt from \"vanilla-tilt\";\n\nexport default function initTiltAnimation() {\n  const elements = document.querySelectorAll(\".js-tilt\");\n  VanillaTilt.init(elements);\n}\n","'use strict';\r\n\r\nvar classCallCheck = function (instance, Constructor) {\r\n  if (!(instance instanceof Constructor)) {\r\n    throw new TypeError(\"Cannot call a class as a function\");\r\n  }\r\n};\r\n\r\n/**\r\n * Created by Sergiu Șandor (micku7zu) on 1/27/2017.\r\n * Original idea: https://github.com/gijsroge/tilt.js\r\n * MIT License.\r\n * Version 1.8.0\r\n */\r\n\r\nvar VanillaTilt = function () {\r\n  function VanillaTilt(element) {\r\n    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    classCallCheck(this, VanillaTilt);\r\n\r\n    if (!(element instanceof Node)) {\r\n      throw \"Can't initialize VanillaTilt because \" + element + \" is not a Node.\";\r\n    }\r\n\r\n    this.width = null;\r\n    this.height = null;\r\n    this.clientWidth = null;\r\n    this.clientHeight = null;\r\n    this.left = null;\r\n    this.top = null;\r\n\r\n    // for Gyroscope sampling\r\n    this.gammazero = null;\r\n    this.betazero = null;\r\n    this.lastgammazero = null;\r\n    this.lastbetazero = null;\r\n\r\n    this.transitionTimeout = null;\r\n    this.updateCall = null;\r\n    this.event = null;\r\n\r\n    this.updateBind = this.update.bind(this);\r\n    this.resetBind = this.reset.bind(this);\r\n\r\n    this.element = element;\r\n    this.settings = this.extendSettings(settings);\r\n\r\n    this.reverse = this.settings.reverse ? -1 : 1;\r\n    this.resetToStart = VanillaTilt.isSettingTrue(this.settings[\"reset-to-start\"]);\r\n    this.glare = VanillaTilt.isSettingTrue(this.settings.glare);\r\n    this.glarePrerender = VanillaTilt.isSettingTrue(this.settings[\"glare-prerender\"]);\r\n    this.fullPageListening = VanillaTilt.isSettingTrue(this.settings[\"full-page-listening\"]);\r\n    this.gyroscope = VanillaTilt.isSettingTrue(this.settings.gyroscope);\r\n    this.gyroscopeSamples = this.settings.gyroscopeSamples;\r\n\r\n    this.elementListener = this.getElementListener();\r\n\r\n    if (this.glare) {\r\n      this.prepareGlare();\r\n    }\r\n\r\n    if (this.fullPageListening) {\r\n      this.updateClientSize();\r\n    }\r\n\r\n    this.addEventListeners();\r\n    this.reset();\r\n\r\n    if (this.resetToStart === false) {\r\n      this.settings.startX = 0;\r\n      this.settings.startY = 0;\r\n    }\r\n  }\r\n\r\n  VanillaTilt.isSettingTrue = function isSettingTrue(setting) {\r\n    return setting === \"\" || setting === true || setting === 1;\r\n  };\r\n\r\n  /**\r\n   * Method returns element what will be listen mouse events\r\n   * @return {Node}\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.getElementListener = function getElementListener() {\r\n    if (this.fullPageListening) {\r\n      return window.document;\r\n    }\r\n\r\n    if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\r\n      var mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\r\n\r\n      if (mouseEventElement) {\r\n        return mouseEventElement;\r\n      }\r\n    }\r\n\r\n    if (this.settings[\"mouse-event-element\"] instanceof Node) {\r\n      return this.settings[\"mouse-event-element\"];\r\n    }\r\n\r\n    return this.element;\r\n  };\r\n\r\n  /**\r\n   * Method set listen methods for this.elementListener\r\n   * @return {Node}\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.addEventListeners = function addEventListeners() {\r\n    this.onMouseEnterBind = this.onMouseEnter.bind(this);\r\n    this.onMouseMoveBind = this.onMouseMove.bind(this);\r\n    this.onMouseLeaveBind = this.onMouseLeave.bind(this);\r\n    this.onWindowResizeBind = this.onWindowResize.bind(this);\r\n    this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\r\n\r\n    this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n    this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n    this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\r\n\r\n    if (this.glare || this.fullPageListening) {\r\n      window.addEventListener(\"resize\", this.onWindowResizeBind);\r\n    }\r\n\r\n    if (this.gyroscope) {\r\n      window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Method remove event listeners from current this.elementListener\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.removeEventListeners = function removeEventListeners() {\r\n    this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n    this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n    this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\r\n\r\n    if (this.gyroscope) {\r\n      window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\r\n    }\r\n\r\n    if (this.glare || this.fullPageListening) {\r\n      window.removeEventListener(\"resize\", this.onWindowResizeBind);\r\n    }\r\n  };\r\n\r\n  VanillaTilt.prototype.destroy = function destroy() {\r\n    clearTimeout(this.transitionTimeout);\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.reset();\r\n\r\n    this.removeEventListeners();\r\n    this.element.vanillaTilt = null;\r\n    delete this.element.vanillaTilt;\r\n\r\n    this.element = null;\r\n  };\r\n\r\n  VanillaTilt.prototype.onDeviceOrientation = function onDeviceOrientation(event) {\r\n    if (event.gamma === null || event.beta === null) {\r\n      return;\r\n    }\r\n\r\n    this.updateElementPosition();\r\n\r\n    if (this.gyroscopeSamples > 0) {\r\n      this.lastgammazero = this.gammazero;\r\n      this.lastbetazero = this.betazero;\r\n\r\n      if (this.gammazero === null) {\r\n        this.gammazero = event.gamma;\r\n        this.betazero = event.beta;\r\n      } else {\r\n        this.gammazero = (event.gamma + this.lastgammazero) / 2;\r\n        this.betazero = (event.beta + this.lastbetazero) / 2;\r\n      }\r\n\r\n      this.gyroscopeSamples -= 1;\r\n    }\r\n\r\n    var totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\r\n    var totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\r\n\r\n    var degreesPerPixelX = totalAngleX / this.width;\r\n    var degreesPerPixelY = totalAngleY / this.height;\r\n\r\n    var angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);\r\n    var angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);\r\n\r\n    var posX = angleX / degreesPerPixelX;\r\n    var posY = angleY / degreesPerPixelY;\r\n\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.event = {\r\n      clientX: posX + this.left,\r\n      clientY: posY + this.top\r\n    };\r\n\r\n    this.updateCall = requestAnimationFrame(this.updateBind);\r\n  };\r\n\r\n  VanillaTilt.prototype.onMouseEnter = function onMouseEnter() {\r\n    this.updateElementPosition();\r\n    this.element.style.willChange = \"transform\";\r\n    this.setTransition();\r\n  };\r\n\r\n  VanillaTilt.prototype.onMouseMove = function onMouseMove(event) {\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.event = event;\r\n    this.updateCall = requestAnimationFrame(this.updateBind);\r\n  };\r\n\r\n  VanillaTilt.prototype.onMouseLeave = function onMouseLeave() {\r\n    this.setTransition();\r\n\r\n    if (this.settings.reset) {\r\n      requestAnimationFrame(this.resetBind);\r\n    }\r\n  };\r\n\r\n  VanillaTilt.prototype.reset = function reset() {\r\n    this.onMouseEnter();\r\n\r\n    if (this.fullPageListening) {\r\n      this.event = {\r\n        clientX: (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.clientWidth,\r\n        clientY: (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.clientHeight\r\n      };\r\n    } else {\r\n      this.event = {\r\n        clientX: this.left + (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.width,\r\n        clientY: this.top + (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.height\r\n      };\r\n    }\r\n\r\n    var backupScale = this.settings.scale;\r\n    this.settings.scale = 1;\r\n    this.update();\r\n    this.settings.scale = backupScale;\r\n    this.resetGlare();\r\n  };\r\n\r\n  VanillaTilt.prototype.resetGlare = function resetGlare() {\r\n    if (this.glare) {\r\n      this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\r\n      this.glareElement.style.opacity = \"0\";\r\n    }\r\n  };\r\n\r\n  VanillaTilt.prototype.getValues = function getValues() {\r\n    var x = void 0,\r\n        y = void 0;\r\n\r\n    if (this.fullPageListening) {\r\n      x = this.event.clientX / this.clientWidth;\r\n      y = this.event.clientY / this.clientHeight;\r\n    } else {\r\n      x = (this.event.clientX - this.left) / this.width;\r\n      y = (this.event.clientY - this.top) / this.height;\r\n    }\r\n\r\n    x = Math.min(Math.max(x, 0), 1);\r\n    y = Math.min(Math.max(y, 0), 1);\r\n\r\n    var tiltX = (this.reverse * (this.settings.max - x * this.settings.max * 2)).toFixed(2);\r\n    var tiltY = (this.reverse * (y * this.settings.max * 2 - this.settings.max)).toFixed(2);\r\n    var angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\r\n\r\n    return {\r\n      tiltX: tiltX,\r\n      tiltY: tiltY,\r\n      percentageX: x * 100,\r\n      percentageY: y * 100,\r\n      angle: angle\r\n    };\r\n  };\r\n\r\n  VanillaTilt.prototype.updateElementPosition = function updateElementPosition() {\r\n    var rect = this.element.getBoundingClientRect();\r\n\r\n    this.width = this.element.offsetWidth;\r\n    this.height = this.element.offsetHeight;\r\n    this.left = rect.left;\r\n    this.top = rect.top;\r\n  };\r\n\r\n  VanillaTilt.prototype.update = function update() {\r\n    var values = this.getValues();\r\n\r\n    this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" + \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" + \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" + \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\r\n\r\n    if (this.glare) {\r\n      this.glareElement.style.transform = \"rotate(\" + values.angle + \"deg) translate(-50%, -50%)\";\r\n      this.glareElement.style.opacity = \"\" + values.percentageY * this.settings[\"max-glare\"] / 100;\r\n    }\r\n\r\n    this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\r\n      \"detail\": values\r\n    }));\r\n\r\n    this.updateCall = null;\r\n  };\r\n\r\n  /**\r\n   * Appends the glare element (if glarePrerender equals false)\r\n   * and sets the default style\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.prepareGlare = function prepareGlare() {\r\n    // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\r\n    if (!this.glarePrerender) {\r\n      // Create glare element\r\n      var jsTiltGlare = document.createElement(\"div\");\r\n      jsTiltGlare.classList.add(\"js-tilt-glare\");\r\n\r\n      var jsTiltGlareInner = document.createElement(\"div\");\r\n      jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\r\n\r\n      jsTiltGlare.appendChild(jsTiltGlareInner);\r\n      this.element.appendChild(jsTiltGlare);\r\n    }\r\n\r\n    this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\r\n    this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\r\n\r\n    if (this.glarePrerender) {\r\n      return;\r\n    }\r\n\r\n    Object.assign(this.glareElementWrapper.style, {\r\n      \"position\": \"absolute\",\r\n      \"top\": \"0\",\r\n      \"left\": \"0\",\r\n      \"width\": \"100%\",\r\n      \"height\": \"100%\",\r\n      \"overflow\": \"hidden\",\r\n      \"pointer-events\": \"none\",\r\n      \"border-radius\": \"inherit\"\r\n    });\r\n\r\n    Object.assign(this.glareElement.style, {\r\n      \"position\": \"absolute\",\r\n      \"top\": \"50%\",\r\n      \"left\": \"50%\",\r\n      \"pointer-events\": \"none\",\r\n      \"background-image\": \"linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)\",\r\n      \"transform\": \"rotate(180deg) translate(-50%, -50%)\",\r\n      \"transform-origin\": \"0% 0%\",\r\n      \"opacity\": \"0\"\r\n    });\r\n\r\n    this.updateGlareSize();\r\n  };\r\n\r\n  VanillaTilt.prototype.updateGlareSize = function updateGlareSize() {\r\n    if (this.glare) {\r\n      var glareSize = (this.element.offsetWidth > this.element.offsetHeight ? this.element.offsetWidth : this.element.offsetHeight) * 2;\r\n\r\n      Object.assign(this.glareElement.style, {\r\n        \"width\": glareSize + \"px\",\r\n        \"height\": glareSize + \"px\"\r\n      });\r\n    }\r\n  };\r\n\r\n  VanillaTilt.prototype.updateClientSize = function updateClientSize() {\r\n    this.clientWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n\r\n    this.clientHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n  };\r\n\r\n  VanillaTilt.prototype.onWindowResize = function onWindowResize() {\r\n    this.updateGlareSize();\r\n    this.updateClientSize();\r\n  };\r\n\r\n  VanillaTilt.prototype.setTransition = function setTransition() {\r\n    var _this = this;\r\n\r\n    clearTimeout(this.transitionTimeout);\r\n    this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\r\n    if (this.glare) this.glareElement.style.transition = \"opacity \" + this.settings.speed + \"ms \" + this.settings.easing;\r\n\r\n    this.transitionTimeout = setTimeout(function () {\r\n      _this.element.style.transition = \"\";\r\n      if (_this.glare) {\r\n        _this.glareElement.style.transition = \"\";\r\n      }\r\n    }, this.settings.speed);\r\n  };\r\n\r\n  /**\r\n   * Method return patched settings of instance\r\n   * @param {boolean} settings.reverse - reverse the tilt direction\r\n   * @param {number} settings.max - max tilt rotation (degrees)\r\n   * @param {startX} settings.startX - the starting tilt on the X axis, in degrees. Default: 0\r\n   * @param {startY} settings.startY - the starting tilt on the Y axis, in degrees. Default: 0\r\n   * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\r\n   * @param {string} settings.easing - Easing on enter/exit\r\n   * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\r\n   * @param {number} settings.speed - Speed of the enter/exit transition\r\n   * @param {boolean} settings.transition - Set a transition on enter/exit\r\n   * @param {string|null} settings.axis - What axis should be enabled. Can be \"x\" or \"y\"\r\n   * @param {boolean} settings.glare - if it should have a \"glare\" effect\r\n   * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\r\n   * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\r\n   * @param {boolean} settings.full-page-listening - If true, parallax effect will listen to mouse move events on the whole document, not only the selected element\r\n   * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\r\n   * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\r\n   * @param {boolean} settings.reset-to-start - true = On reset event (mouse leave) will return to initial start angle (if startX or startY is set)\r\n   * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\r\n   * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\r\n   * @param {gyroscopeSamples} settings.gyroscopeSamples - How many gyroscope moves to decide the starting position.\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.extendSettings = function extendSettings(settings) {\r\n    var defaultSettings = {\r\n      reverse: false,\r\n      max: 15,\r\n      startX: 0,\r\n      startY: 0,\r\n      perspective: 1000,\r\n      easing: \"cubic-bezier(.03,.98,.52,.99)\",\r\n      scale: 1,\r\n      speed: 300,\r\n      transition: true,\r\n      axis: null,\r\n      glare: false,\r\n      \"max-glare\": 1,\r\n      \"glare-prerender\": false,\r\n      \"full-page-listening\": false,\r\n      \"mouse-event-element\": null,\r\n      reset: true,\r\n      \"reset-to-start\": true,\r\n      gyroscope: true,\r\n      gyroscopeMinAngleX: -45,\r\n      gyroscopeMaxAngleX: 45,\r\n      gyroscopeMinAngleY: -45,\r\n      gyroscopeMaxAngleY: 45,\r\n      gyroscopeSamples: 10\r\n    };\r\n\r\n    var newSettings = {};\r\n    for (var property in defaultSettings) {\r\n      if (property in settings) {\r\n        newSettings[property] = settings[property];\r\n      } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\r\n        var attribute = this.element.getAttribute(\"data-tilt-\" + property);\r\n        try {\r\n          newSettings[property] = JSON.parse(attribute);\r\n        } catch (e) {\r\n          newSettings[property] = attribute;\r\n        }\r\n      } else {\r\n        newSettings[property] = defaultSettings[property];\r\n      }\r\n    }\r\n\r\n    return newSettings;\r\n  };\r\n\r\n  VanillaTilt.init = function init(elements, settings) {\r\n    if (elements instanceof Node) {\r\n      elements = [elements];\r\n    }\r\n\r\n    if (elements instanceof NodeList) {\r\n      elements = [].slice.call(elements);\r\n    }\r\n\r\n    if (!(elements instanceof Array)) {\r\n      return;\r\n    }\r\n\r\n    elements.forEach(function (element) {\r\n      if (!(\"vanillaTilt\" in element)) {\r\n        element.vanillaTilt = new VanillaTilt(element, settings);\r\n      }\r\n    });\r\n  };\r\n\r\n  return VanillaTilt;\r\n}();\r\n\r\nif (typeof document !== \"undefined\") {\r\n  /* expose the class to window */\r\n  window.VanillaTilt = VanillaTilt;\r\n\r\n  /**\r\n   * Auto load\r\n   */\r\n  VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\r\n}\r\n\r\nmodule.exports = VanillaTilt;\r\n","export const defaultProps = {\n  easing: \"cubic-bezier(0.5, 0, 0, 1)\",\n  distance: \"30px\",\n  duration: 1000,\n  desktop: true,\n  mobile: true,\n};\n\nexport const targetElements = [\n  {\n    element: \".section-title\",\n    animation: {\n      delay: 300,\n      distance: \"0px\",\n      origin: \"bottom\",\n    },\n  },\n  {\n    element: \".hero-title\",\n    animation: {\n      delay: 500,\n      origin: window.innerWidth > 768 ? \"left\" : \"bottom\",\n    },\n  },\n  {\n    element: \".hero-cta\",\n    animation: {\n      delay: 1000,\n      origin: window.innerWidth > 768 ? \"left\" : \"bottom\",\n    },\n  },\n  {\n    element: \".about-wrapper__image\",\n    animation: {\n      delay: 600,\n      origin: \"bottom\",\n    },\n  },\n  {\n    element: \".about-wrapper__info\",\n    animation: {\n      delay: 1000,\n      origin: window.innerWidth > 768 ? \"left\" : \"bottom\",\n    },\n  },\n  {\n    element: \".project-wrapper__text\",\n    animation: {\n      delay: 500,\n      origin: window.innerWidth > 768 ? \"left\" : \"bottom\",\n    },\n  },\n  {\n    element: \".project-wrapper__image\",\n    animation: {\n      delay: 1000,\n      origin: window.innerWidth > 768 ? \"right\" : \"bottom\",\n    },\n  },\n  {\n    element: \".contact-wrapper\",\n    animation: {\n      delay: 800,\n      origin: \"bottom\",\n    },\n  },\n];\n","export default function initProfileCard() {\n    const wrap = document.querySelector(\".pc-card-wrapper\");\n    const card = document.querySelector(\".pc-card\");\n\n    if (!wrap || !card) return;\n\n    const ANIMATION_CONFIG = {\n        SMOOTH_DURATION: 600,\n        INITIAL_DURATION: 1500,\n        INITIAL_X_OFFSET: 70,\n        INITIAL_Y_OFFSET: 60,\n    };\n\n    const clamp = (value, min = 0, max = 100) => Math.min(Math.max(value, min), max);\n    const round = (value, precision = 3) => parseFloat(value.toFixed(precision));\n    const adjust = (value, fromMin, fromMax, toMin, toMax) => \n        round(toMin + ((toMax - toMin) * (value - fromMin)) / (fromMax - fromMin));\n    const easeInOutCubic = (x) => (x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2);\n\n    let rafId = null;\n\n    const updateCardTransform = (offsetX, offsetY) => {\n        const rect = card.getBoundingClientRect();\n        const width = rect.width;\n        const height = rect.height;\n        \n        const percentX = clamp((100 / width) * offsetX);\n        const percentY = clamp((100 / height) * offsetY);\n        const centerX = percentX - 50;\n        const centerY = percentY - 50;\n        \n        // Calculate distance from center for opacity effects\n        const distance = Math.hypot(centerX, centerY);\n        const fromCenter = clamp(distance / 50, 0, 1);\n        const fromLeft = clamp(percentX / 100, 0, 1);\n        const fromTop = clamp(percentY / 100, 0, 1);\n\n        const properties = {\n            \"--pointer-x\": `${percentX}%`,\n            \"--pointer-y\": `${percentY}%`,\n            \"--background-x\": `${adjust(percentX, 0, 100, 35, 65)}%`,\n            \"--background-y\": `${adjust(percentY, 0, 100, 35, 65)}%`,\n            \"--pointer-from-center\": `${fromCenter}`,\n            \"--pointer-from-left\": `${fromLeft}`,\n            \"--pointer-from-top\": `${fromTop}`,\n            \"--rotate-x\": `${round(-(centerX / 5))}deg`,\n            \"--rotate-y\": `${round(centerY / 4)}deg`,\n        };\n\n        Object.entries(properties).forEach(([property, value]) => {\n            wrap.style.setProperty(property, value);\n        });\n    };\n\n    const createSmoothAnimation = (duration, startX, startY) => {\n        const startTime = performance.now();\n        const rect = wrap.getBoundingClientRect();\n        const targetX = rect.width / 2;\n        const targetY = rect.height / 2;\n\n        const animationLoop = (currentTime) => {\n            const elapsed = currentTime - startTime;\n            const progress = clamp(elapsed / duration, 0, 1);\n            const easedProgress = easeInOutCubic(progress);\n            const currentX = adjust(easedProgress, 0, 1, startX, targetX);\n            const currentY = adjust(easedProgress, 0, 1, startY, targetY);\n\n            updateCardTransform(currentX, currentY);\n\n            if (progress < 1) {\n                rafId = requestAnimationFrame(animationLoop);\n            }\n        };\n        rafId = requestAnimationFrame(animationLoop);\n    };\n\n    const cancelAnimation = () => {\n        if (rafId) {\n            cancelAnimationFrame(rafId);\n            rafId = null;\n        }\n    };\n\n    // Event handlers\n    const handlePointerEnter = () => {\n        cancelAnimation();\n        wrap.classList.add(\"active\");\n        card.classList.add(\"active\");\n    };\n\n    const handlePointerMove = (event) => {\n        if (!wrap.classList.contains(\"active\")) return;\n        \n        const rect = card.getBoundingClientRect();\n        const offsetX = event.clientX - rect.left;\n        const offsetY = event.clientY - rect.top;\n        \n        updateCardTransform(offsetX, offsetY);\n    };\n\n    const handlePointerLeave = (event) => {\n        const rect = card.getBoundingClientRect();\n        const offsetX = event.clientX - rect.left;\n        const offsetY = event.clientY - rect.top;\n        \n        createSmoothAnimation(ANIMATION_CONFIG.SMOOTH_DURATION, offsetX, offsetY);\n        wrap.classList.remove(\"active\");\n        card.classList.remove(\"active\");\n    };\n\n    // Add modern pointer events\n    card.addEventListener(\"pointerenter\", handlePointerEnter);\n    card.addEventListener(\"pointermove\", handlePointerMove);\n    card.addEventListener(\"pointerleave\", handlePointerLeave);\n\n    // Fallback for older browsers\n    card.addEventListener(\"mouseenter\", handlePointerEnter);\n    card.addEventListener(\"mousemove\", handlePointerMove);\n    card.addEventListener(\"mouseleave\", handlePointerLeave);\n\n    // Touch support\n    let touchStarted = false;\n    \n    card.addEventListener(\"touchstart\", (event) => {\n        event.preventDefault();\n        touchStarted = true;\n        handlePointerEnter();\n        \n        const touch = event.touches[0];\n        if (touch) {\n            const rect = card.getBoundingClientRect();\n            const offsetX = touch.clientX - rect.left;\n            const offsetY = touch.clientY - rect.top;\n            updateCardTransform(offsetX, offsetY);\n        }\n    });\n\n    card.addEventListener(\"touchmove\", (event) => {\n        if (!touchStarted) return;\n        event.preventDefault();\n        \n        const touch = event.touches[0];\n        if (touch) {\n            const rect = card.getBoundingClientRect();\n            const offsetX = touch.clientX - rect.left;\n            const offsetY = touch.clientY - rect.top;\n            updateCardTransform(offsetX, offsetY);\n        }\n    });\n\n    card.addEventListener(\"touchend\", (event) => {\n        if (!touchStarted) return;\n        event.preventDefault();\n        touchStarted = false;\n        \n        const rect = card.getBoundingClientRect();\n        const centerX = rect.width / 2;\n        const centerY = rect.height / 2;\n        \n        createSmoothAnimation(ANIMATION_CONFIG.SMOOTH_DURATION, centerX, centerY);\n        wrap.classList.remove(\"active\");\n        card.classList.remove(\"active\");\n    });\n\n    // Initialize card position\n    const initializeCard = () => {\n        const rect = wrap.getBoundingClientRect();\n        if (rect.width === 0 || rect.height === 0) {\n            setTimeout(initializeCard, 100);\n            return;\n        }\n        \n        const initialX = rect.width - ANIMATION_CONFIG.INITIAL_X_OFFSET;\n        const initialY = ANIMATION_CONFIG.INITIAL_Y_OFFSET;\n        \n        updateCardTransform(initialX, initialY);\n        \n        // Start initial animation after a short delay\n        setTimeout(() => {\n            createSmoothAnimation(ANIMATION_CONFIG.INITIAL_DURATION, initialX, initialY);\n        }, 200);\n    };\n\n    // Initialize when DOM is ready\n    if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', initializeCard);\n    } else {\n        initializeCard();\n    }\n\n    // Handle window resize\n    let resizeTimeout;\n    window.addEventListener('resize', () => {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(() => {\n            cancelAnimation();\n            const rect = wrap.getBoundingClientRect();\n            const centerX = rect.width / 2;\n            const centerY = rect.height / 2;\n            updateCardTransform(centerX, centerY);\n        }, 150);\n    });\n\n    // Make contact button functional\n    const contactBtn = document.querySelector('.pc-contact-btn');\n    if (contactBtn) {\n        contactBtn.style.pointerEvents = 'auto';\n        contactBtn.addEventListener('click', (event) => {\n            event.stopPropagation();\n            // Scroll to contact section\n            const contactSection = document.querySelector('#contact');\n            if (contactSection) {\n                contactSection.scrollIntoView({ behavior: 'smooth' });\n            }\n        });\n    }\n}","// This module handles the interactive variable font effect.\n\n// Stores the current mouse position.\nconst mousePosition = { x: 0, y: 0 };\nwindow.addEventListener(\"mousemove\", (ev) => {\n  mousePosition.x = ev.clientX;\n  mousePosition.y = ev.clientY;\n});\nwindow.addEventListener(\"touchmove\", (ev) => {\n  const touch = ev.touches[0];\n  mousePosition.x = touch.clientX;\n  mousePosition.y = touch.clientY;\n});\n\n/**\n * Initializes the variable proximity effect on a single element.\n * @param {HTMLElement} el - The target element with data attributes.\n */\nfunction initVariableText(el) {\n  let label = el.dataset.text;\n  const fromSettings = el.dataset.fromSettings;\n  const toSettings = el.dataset.toSettings;\n  const radius = parseInt(el.dataset.radius, 10);\n  const falloff = \"linear\";\n\n  const letterRefs = [];\n\n  // Find and mark the text to be highlighted (e.g., \"[[Your Name]]\").\n  const highlightRegex = /\\[\\[(.*?)\\]\\]/;\n  const match = label.match(highlightRegex);\n  let highlightStartIndex = -1;\n  let highlightEndIndex = -1;\n\n  if (match) {\n    const highlightContent = match[1];\n    highlightStartIndex = label.indexOf(match[0]);\n    // The new label is the original string without the [[...]] markers.\n    label = label.replace(highlightRegex, highlightContent);\n    highlightEndIndex = highlightStartIndex + highlightContent.length;\n  }\n\n  // Parse font variation settings string into a map.\n  const parseSettings = (settingsStr) =>\n    new Map(\n      settingsStr.split(\",\").map(s => {\n        const [name, value] = s.trim().split(\" \");\n        return [name.replace(/['\"]/g, \"\"), parseFloat(value)];\n      })\n    );\n\n  const fromSettingsMap = parseSettings(fromSettings);\n  const toSettingsMap = parseSettings(toSettings);\n\n  // Prepare settings for interpolation.\n  const parsedSettings = Array.from(fromSettingsMap.entries()).map(([axis, fromValue]) => ({\n    axis,\n    fromValue,\n    toValue: toSettingsMap.get(axis) ?? fromValue,\n  }));\n\n  // Split text into words to preserve spaces and handle highlighting.\n  el.innerHTML = ''; // Clear original text\n  const words = label.split(' ');\n  let charIndex = 0; // Keep track of the character index in the full string.\n\n  words.forEach((word, wordIndex) => {\n    const wordWrapper = document.createElement('span');\n    wordWrapper.style.display = 'inline-block';\n    wordWrapper.style.whiteSpace = 'nowrap';\n\n    word.split('').forEach(letter => {\n      const span = document.createElement('span');\n      span.textContent = letter;\n      span.style.display = 'inline-block';\n      span.style.fontVariationSettings = fromSettings;\n\n      // Add highlight class if the character is part of the name.\n      if (highlightStartIndex !== -1 && charIndex >= highlightStartIndex && charIndex < highlightEndIndex) {\n        span.classList.add('name-highlight');\n      }\n\n      wordWrapper.appendChild(span);\n      letterRefs.push(span);\n      charIndex++;\n    });\n\n    el.appendChild(wordWrapper);\n\n    // Add a space after each word, except the last one.\n    if (wordIndex < words.length - 1) {\n      const space = document.createElement('span');\n      space.innerHTML = '&nbsp;';\n      el.appendChild(space);\n      charIndex++; // Increment for the space character.\n    }\n  });\n\n  // Add a hidden space for screen readers.\n  const srOnlySpan = document.createElement('span');\n  srOnlySpan.textContent = ' ';\n  srOnlySpan.classList.add('sr-only');\n  el.appendChild(srOnlySpan);\n\n  // Animation loop.\n  function animate() {\n    letterRefs.forEach((letterRef) => {\n      if (!letterRef) return;\n\n      const rect = letterRef.getBoundingClientRect();\n      const letterCenterX = rect.left + rect.width / 2;\n      const letterCenterY = rect.top + rect.height / 2;\n\n      const distance = Math.sqrt(\n        (mousePosition.x - letterCenterX) ** 2 +\n        (mousePosition.y - letterCenterY) ** 2\n      );\n\n      // If the mouse is outside the radius, reset to initial state.\n      if (distance >= radius) {\n        letterRef.style.fontVariationSettings = fromSettings;\n        return;\n      }\n\n      // Calculate the influence based on distance (falloff).\n      const norm = Math.min(Math.max(1 - distance / radius, 0), 1);\n      let falloffValue;\n      switch (falloff) {\n        case \"exponential\": falloffValue = norm ** 2; break;\n        case \"gaussian\": falloffValue = Math.exp(-((distance / (radius / 2)) ** 2) / 2); break;\n        default: falloffValue = norm;\n      }\n\n      // Interpolate and apply the new font settings.\n      const newSettings = parsedSettings.map(({ axis, fromValue, toValue }) => {\n          const interpolatedValue = fromValue + (toValue - fromValue) * falloffValue;\n          return `'${axis}' ${interpolatedValue}`;\n        })\n        .join(\", \");\n\n      letterRef.style.fontVariationSettings = newSettings;\n    });\n\n    requestAnimationFrame(animate);\n  }\n\n  // Start the animation.\n  requestAnimationFrame(animate);\n}\n\n// Export a function that initializes the effect on all relevant elements.\nexport default function initVariableProximity() {\n  const elements = document.querySelectorAll('.variable-proximity-text');\n  elements.forEach(initVariableText);\n}\n"],"names":["defaultProps","$b5f6d4efc654cf78$exports","$b5f6d4efc654cf78$var$classCallCheck","instance","Constructor","TypeError","$b5f6d4efc654cf78$var$VanillaTilt","VanillaTilt","element","settings","arguments","length","undefined","Node","width","height","clientWidth","clientHeight","left","top","gammazero","betazero","lastgammazero","lastbetazero","transitionTimeout","updateCall","event","updateBind","update","bind","resetBind","reset","extendSettings","reverse","resetToStart","isSettingTrue","glare","glarePrerender","fullPageListening","gyroscope","gyroscopeSamples","elementListener","getElementListener","prepareGlare","updateClientSize","addEventListeners","startX","startY","setting","prototype","window","document","mouseEventElement","querySelector","onMouseEnterBind","onMouseEnter","onMouseMoveBind","onMouseMove","onMouseLeaveBind","onMouseLeave","onWindowResizeBind","onWindowResize","onDeviceOrientationBind","onDeviceOrientation","addEventListener","removeEventListeners","removeEventListener","destroy","clearTimeout","cancelAnimationFrame","vanillaTilt","gamma","beta","updateElementPosition","totalAngleX","gyroscopeMaxAngleX","gyroscopeMinAngleX","totalAngleY","gyroscopeMaxAngleY","gyroscopeMinAngleY","degreesPerPixelX","degreesPerPixelY","angleX","angleY","clientX","posX","clientY","posY","requestAnimationFrame","style","willChange","setTransition","max","backupScale","scale","resetGlare","glareElement","transform","opacity","getValues","x","y","Math","min","tiltX","toFixed","tiltY","percentageX","percentageY","angle","atan2","PI","rect","getBoundingClientRect","offsetWidth","offsetHeight","values","perspective","axis","dispatchEvent","CustomEvent","jsTiltGlare","createElement","classList","add","jsTiltGlareInner","appendChild","glareElementWrapper","Object","assign","updateGlareSize","glareSize","innerWidth","documentElement","body","innerHeight","_this","transition","speed","easing","setTimeout","defaultSettings","newSettings","property","hasAttribute","attribute","getAttribute","JSON","parse","e","init","elements","NodeList","slice","call","Array","forEach","querySelectorAll","$d859da13df4a30ff$export$adcf75ad64a03007","animation","delay","distance","origin","$16dcc2da04bcab42$var$mousePosition","$16dcc2da04bcab42$var$initVariableText","el","label","dataset","text","fromSettings","toSettings","radius","parseInt","letterRefs","highlightRegex","match","highlightStartIndex","highlightEndIndex","highlightContent","indexOf","replace","parseSettings","settingsStr","Map","split","map","s","name","value","trim","parseFloat","fromSettingsMap","toSettingsMap","parsedSettings","from","entries","fromValue","toValue","get","innerHTML","words","charIndex","word","wordIndex","wordWrapper","display","whiteSpace","letter","span","textContent","fontVariationSettings","push","space","srOnlySpan","animate","letterRef","letterCenterX","letterCenterY","sqrt","norm","join","$16dcc2da04bcab42$export$2e2bcd8739ae039","ev","touch","touches","duration","desktop","mobile","targetElements","ScrollReveal","reveal","a","__esModule","default","resizeTimeout","wrap","card","ANIMATION_CONFIG","SMOOTH_DURATION","INITIAL_DURATION","INITIAL_X_OFFSET","INITIAL_Y_OFFSET","clamp","round","precision","adjust","fromMin","fromMax","toMin","toMax","easeInOutCubic","pow","rafId","updateCardTransform","offsetX","offsetY","percentX","percentY","centerX","centerY","fromCenter","hypot","fromLeft","fromTop","setProperty","createSmoothAnimation","startTime","performance","now","targetX","targetY","animationLoop","currentTime","progress","elapsed","easedProgress","cancelAnimation","handlePointerEnter","handlePointerMove","contains","handlePointerLeave","remove","touchStarted","preventDefault","initializeCard","initialX","initialY","readyState","contactBtn","pointerEvents","stopPropagation","contactSection","scrollIntoView","behavior","decryptedElements","$35da740d59af89ba$var$initDarkMode","toggleSwitch","console","warn","applyDarkMode","isDark","setAttribute","checked","currentTheme","getSavedTheme","saved","localStorage","getItem","matchMedia","matches","target","theme","setItem","detail","mediaQuery"],"version":3,"file":"index.fe6f6de3.js.map"}