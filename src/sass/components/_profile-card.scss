:root {
  --pointer-x: 50%;
  --pointer-y: 50%;
  --pointer-from-center: 0;
  --pointer-from-left: 50%;
  --pointer-from-top: 50%;
  --card-opacity: 0;
  --rotate-x: 0deg;
  --rotate-y: 0deg;
  --background-x: 50%;
  --background-y: 50%;
  
  // Add missing color variables
  --sunpillar-clr-1: hsl(258, 100%, 85%);
  --sunpillar-clr-2: hsl(268, 100%, 80%);
  --sunpillar-clr-3: hsl(278, 100%, 75%);
  --sunpillar-clr-4: hsl(288, 100%, 70%);
  --sunpillar-clr-5: hsl(298, 100%, 65%);
  --sunpillar-clr-6: hsl(308, 100%, 60%);
  
  // Add grain texture
  --grain: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><filter id="noiseFilter"><feTurbulence type="fractalNoise" baseFrequency="0.9" numOctaves="1" stitchTiles="stitch"/></filter></defs><rect width="100%" height="100%" filter="url(%23noiseFilter)" opacity="0.15"/></svg>');
  
  // Add icon mask (replace with your actual icon path)
  --icon: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10"/></svg>');
  
  --behind-gradient: radial-gradient(farthest-side circle at var(--pointer-x) var(--pointer-y), hsla(266, 100%, 90%, var(--card-opacity)) 4%, hsla(266, 50%, 80%, calc(var(--card-opacity) * 0.75)) 10%, hsla(266, 25%, 70%, calc(var(--card-opacity) * 0.5)) 50%, hsla(266, 0%, 60%, 0) 100%), radial-gradient(35% 52% at 55% 20%, #00ffaac4 0%, #073aff00 100%), radial-gradient(100% 100% at 50% 50%, #00c1ffff 1%, #073aff00 76%), conic-gradient(from 124deg at 50% 50%, #c137ffff 0%, #07c6ffff 40%, #07c6ffff 60%, #c137ffff 100%);
  --inner-gradient: linear-gradient(145deg, #60496e8c 0%, #71c4ff44 100%);
  --card-radius: 24px;
}

// Add missing animation keyframes
@keyframes holo-bg {
  0%, 100% { 
    background-position: 0% 50%, 50% 50%, center; 
  }
  25% { 
    background-position: 100% 50%, 25% 25%, center; 
  }
  50% { 
    background-position: 200% 50%, 75% 75%, center; 
  }
  75% { 
    background-position: 300% 50%, 25% 75%, center; 
  }
}

.pc-card-wrapper {
  perspective: 600px;
  transform: translate3d(0, 0, 0);
  position: relative;
  touch-action: none;
  max-width: 320px;
  margin: 0 auto;
}

.pc-card-wrapper::before {
  content: '';
  position: absolute;
  inset: -15px;
  border-radius: var(--card-radius);
  transition: all 0.4s ease;
  filter: blur(25px);
  transform: scale(0.9) translate3d(0, 0, 0);
  background-image: var(--behind-gradient);
  opacity: 0;
}

.pc-card-wrapper:hover,
.pc-card-wrapper.active {
  --card-opacity: 0.5;
}

.pc-card-wrapper:hover::before,
.pc-card-wrapper.active::before {
  opacity: 1;
  transform: scale(1) translate3d(0, 0, 0);
}

.pc-card {
  height: auto;
  aspect-ratio: 0.72;
  width: 100%;
  border-radius: var(--card-radius);
  position: relative;
  background-color: #1a2233;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  transition: transform 0.8s ease;
  transform: rotateX(0deg) rotateY(0deg);
  overflow: hidden;
  transform-style: preserve-3d;
}

.pc-card:hover,
.pc-card.active {
  transition: none;
  transform: rotateX(var(--rotate-y)) rotateY(var(--rotate-x));
}

.pc-card * {
  display: grid;
  grid-area: 1/-1;
  border-radius: var(--card-radius);
  transform: translateZ(0.1px);
  pointer-events: none;
}

.pc-inside {
  inset: 1px;
  position: absolute;
  background-image: var(--inner-gradient);
  background-color: rgba(0, 0, 0, 0.85);
}

.pc-shine {
  --space: 5%;
  --angle: -45deg;
  mask-image: var(--icon);
  mask-mode: luminance;
  mask-repeat: repeat;
  mask-size: 150%;
  mask-position: top calc(200% - (var(--background-y) * 5)) left calc(100% - var(--background-x));
  transition: filter 0.6s ease;
  filter: brightness(0.66) contrast(1.33) saturate(0.33) opacity(0.5);
  animation: holo-bg 18s linear infinite;
  mix-blend-mode: color-dodge;
  transform: translate3d(0, 0, 1px);
  overflow: hidden;
  z-index: 3;
  background: transparent;
  background-size: 500% 500%, 300% 300%, 200% 200%;
  background-position: 0 var(--background-y), var(--background-x) var(--background-y), center;
  background-blend-mode: color, hard-light;
  background-image: repeating-linear-gradient(0deg, var(--sunpillar-clr-1) calc(var(--space) * 1), var(--sunpillar-clr-2) calc(var(--space) * 2), var(--sunpillar-clr-3) calc(var(--space) * 3), var(--sunpillar-clr-4) calc(var(--space) * 4), var(--sunpillar-clr-5) calc(var(--space) * 5), var(--sunpillar-clr-6) calc(var(--space) * 6), var(--sunpillar-clr-1) calc(var(--space) * 7)), repeating-linear-gradient(var(--angle), #0e152e 0%, hsl(180, 10%, 60%) 3.8%, hsl(180, 29%, 66%) 4.5%, hsl(180, 10%, 60%) 5.2%, #0e152e 10%, #0e152e 12%), radial-gradient(farthest-corner circle at var(--pointer-x) var(--pointer-y), hsla(0, 0%, 0%, 0.1) 12%, hsla(0, 0%, 0%, 0.15) 20%, hsla(0, 0%, 0%, 0.25) 120%);
  background-repeat: repeat;
}

.pc-shine::before,
.pc-shine::after {
  content: '';
  background-position: center;
  background-size: cover;
  grid-area: 1/1;
  opacity: 0;
}

.pc-card:hover .pc-shine,
.pc-card.active .pc-shine {
  filter: brightness(0.85) contrast(1.5) saturate(0.5);
  animation: none;
}

.pc-card:hover .pc-shine::before,
.pc-card.active .pc-shine::before,
.pc-card:hover .pc-shine::after,
.pc-card.active .pc-shine::after {
  opacity: 1;
}

.pc-shine::before {
  background-image: linear-gradient(45deg, var(--sunpillar-clr-4), var(--sunpillar-clr-5), var(--sunpillar-clr-6), var(--sunpillar-clr-1), var(--sunpillar-clr-2), var(--sunpillar-clr-3)), radial-gradient(circle at var(--pointer-x) var(--pointer-y), hsl(0, 0%, 70%) 0%, hsla(0, 0%, 30%, 0.2) 90%), var(--grain);
  background-size: 250% 250%, 100% 100%, 220px 220px;
  background-position: var(--pointer-x) var(--pointer-y), center, calc(var(--pointer-x) * 0.01) calc(var(--pointer-y) * 0.01);
  background-blend-mode: color-dodge;
  // FIXED: Escape calc() functions to prevent SASS from processing them
  filter: #{"brightness(calc(2 - var(--pointer-from-center))) contrast(calc(var(--pointer-from-center) + 2)) saturate(calc(0.5 + var(--pointer-from-center)))"};
  mix-blend-mode: luminosity;
}

.pc-shine::after {
  background-position: 0 var(--background-y), calc(var(--background-x) * 0.4) calc(var(--background-y) * 0.5), center;
  background-size: 200% 300%, 700% 700%, 100% 100%;
  mix-blend-mode: difference;
  filter: brightness(0.8) contrast(1.5);
}

.pc-glare {
  transform: translate3d(0, 0, 1.1px);
  overflow: hidden;
  background-image: radial-gradient(farthest-corner circle at var(--pointer-x) var(--pointer-y), hsl(248, 25%, 80%) 12%, hsla(207, 40%, 30%, 0.8) 90%);
  mix-blend-mode: overlay;
  filter: brightness(0.8) contrast(1.2);
  z-index: 4;
}

.pc-avatar-content {
  mix-blend-mode: screen;
  overflow: hidden;
}

.pc-avatar-content .avatar {
  width: 100%;
  position: absolute;
  left: 50%;
  transform: translateX(-50%) scale(1.05);
  bottom: 0;
  opacity: calc(1.5 - var(--pointer-from-center));
}

.pc-content {
  max-height: 100%;
  overflow: hidden;
  text-align: center;
  position: relative;
  transform: translate3d(calc(var(--pointer-from-left) * -4px + 2px), calc(var(--pointer-from-top) * -4px + 2px), 0.2px) !important;
  z-index: 5;
  mix-blend-mode: luminosity;
  color: #fff;
}

.pc-details {
  width: 100%;
  position: absolute;
  top: 1.2em;
  display: flex;
  flex-direction: column;
  gap: 0.2em;
}

.pc-details h3 {
  font-weight: 600;
  margin: 0;
  font-size: min(4.5vw, 1.75em);
  background-image: linear-gradient(to bottom, #fff, #b8b8d8);
  -webkit-text-fill-color: transparent;
  background-clip: text;
  -webkit-background-clip: text;
}

.pc-details p {
  font-weight: 500;
  margin: 0 auto;
  font-size: min(2.8vw, 0.9em);
  background-image: linear-gradient(to bottom, #fff, #a0a0d0);
  -webkit-text-fill-color: transparent;
  background-clip: text;
  -webkit-background-clip: text;
}